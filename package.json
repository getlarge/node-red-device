{
  "name": "node-red-device",
  "version": "0.1.0",
  "description": "Node-RED device",
  "scripts": {
    "lint": "npx eslint --ext js .",
    "clean": "rm -rf dist && mkdir dist",
    "build": "npm run clean ; npx babel lib --out-dir dist --copy-files --ignore './lib/uitemplates/*','./lib/functions/*'",
    "build:docker": "cp deploy/.env_docker .env ; docker build -t getlarge/node-red-device:staging .",
    "start": "node node_modules/node-red/red.js -v -u .",
    "start:dev": "cp deploy/.env_development .env ; NODE_ENV=development node ./nodemon.js",
    "start:local": "cp deploy/.env_local .env ; NODE_ENV=local node --max-old-space-size=2048 ./nodemon.js",
    "start:stage": "cp deploy/.env_staging .env ; NODE_ENV=local node --max-old-space-size=2048 ./nodemon.js",
    "start:docker": "cp deploy/.env_docker .env ; docker run -p 8000:8000 --restart always --name node-red-device -d getlarge/node-red-device:staging",
    "deploy:local": "npm run build ; cp deploy/.env_local .env ; pm2 startOrRestart ecosystem.config.js --update-env",
    "deploy:stage": "npm run build ; cp deploy/.env_staging .env ; pm2 startOrRestart ecosystem.config.js --update-env",
    "stop:docker": "docker stop node-red-device"
  },
  "dependencies": {
    "@babel/runtime": "^7.9.6",
    "dotenv": "^8.2.0",
    "express": "^4.17.3",
    "express-basic-auth": "^1.2.0",
    "express-session": "^1.16.1",
    "localtunnel": "^2.0.0",
    "node-cleanup": "^2.1.2",
    "node-lame": "^1.2.2",
    "node-red": "^1.0.6",
    "node-red-dashboard": "^2.22.1",
    "node-red-node-email": "^1.7.8"
  },
  "devDependencies": {
    "@babel/cli": "^7.8.4",
    "@babel/core": "^7.9.6",
    "@babel/node": "^7.8.7",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/plugin-proposal-decorators": "^7.8.3",
    "@babel/plugin-proposal-export-namespace-from": "^7.8.3",
    "@babel/plugin-proposal-function-sent": "^7.8.3",
    "@babel/plugin-proposal-json-strings": "^7.8.3",
    "@babel/plugin-proposal-numeric-separator": "^7.8.3",
    "@babel/plugin-proposal-throw-expressions": "^7.8.3",
    "@babel/plugin-syntax-dynamic-import": "^7.8.3",
    "@babel/plugin-syntax-import-meta": "^7.8.3",
    "@babel/plugin-transform-runtime": "^7.9.6",
    "@babel/preset-env": "^7.9.6",
    "acorn": "^7.2.0",
    "babel-eslint": "^10.1.0",
    "eslint": "^7.0.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-import": "^2.20.0",
    "eslint-plugin-prettier": "^3.1.3",
    "nodemon": "^2.0.4",
    "prettier": "2.0.5"
  },
  "babel": {
    "presets": [
      "@babel/preset-env"
    ],
    "plugins": [
      "@babel/plugin-syntax-dynamic-import",
      "@babel/plugin-syntax-import-meta",
      "@babel/plugin-proposal-class-properties",
      "@babel/plugin-proposal-json-strings",
      [
        "@babel/plugin-proposal-decorators",
        {
          "legacy": true
        }
      ],
      "@babel/plugin-proposal-function-sent",
      "@babel/plugin-proposal-export-namespace-from",
      "@babel/plugin-proposal-numeric-separator",
      "@babel/plugin-proposal-throw-expressions",
      "@babel/plugin-transform-runtime"
    ]
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "es6": true,
      "node": true
    },
    "extends": [
      "prettier"
    ],
    "plugins": [
      "babel",
      "prettier"
    ],
    "parserOptions": {
      "ecmaVersion": 2018,
      "parser": "babel-eslint",
      "sourceType": "module"
    },
    "rules": {
      "import/no-unresolved": "off",
      "import/extensions": "off",
      "import/prefer-default-export": "off",
      "no-param-reassign": "off",
      "one-var-declaration-per-line": "off",
      "prettier/prettier": "error"
    },
    "globals": {
      "require": true
    }
  },
  "eslintIgnore": [
    "/public/",
    ".config.json",
    "/lib/functions/",
    "/lib/uitemplates/",
    "/dist/",
    "/docs/",
    "/node_modules/"
  ],
  "prettier": {
    "bracketSpacing": true,
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "jsxBracketSameLine": true,
    "trailingComma": "all"
  },
  "repository": {
    "type": "git",
    "url": "https://framagit.org/getlarge/node-red-device.git"
  },
  "keywords": [
    "iot",
    "aloes",
    "mqtt",
    "node-red"
  ]
}
