[
    {
        "id": "e6c959b8.c52c2",
        "type": "subflow",
        "name": "set-boolean",
        "info": "",
        "category": "function",
        "in": [
            {
                "x": 380,
                "y": 120,
                "wires": [
                    {
                        "id": "e5966349.7c50d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 120,
                "wires": [
                    {
                        "id": "e5966349.7c50d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "resource_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            }
        ]
    },
    {
        "id": "e5966349.7c50d",
        "type": "function",
        "z": "e6c959b8.c52c2",
        "name": "setBoolean",
        "func": "try {\n    const debug = env.get(\"debug\");\n    if (!msg || msg === null || !msg.payload) throw new Error(\"No input to parse\");\n    const resourceId = env.get(\"resource_id\");\n    if (!resourceId) throw new Error(\"no resource id set\")\n    const value = msg.payload;\n    if (typeof value === \"string\") {\n        msg.payload = value; \n    } else if (typeof value === \"object\" && value.type && value.data){\n        msg.payload = value.data.toString('utf-8');\n    } else if (Buffer.isBuffer(value)){\n        msg.payload = value.toString('utf-8');\n    }\n    if (msg.payload === \"true\" || msg.payload === \"1\" || msg.payload === 1) {\n        msg.payload = true;\n    } else if (msg.payload === \"false\" || msg.payload === \"0\" || msg.payload === 0) {\n        msg.payload = false;\n    }\n    if (debug) {\n        console.log(`set-boolean for ${resourceId} : ${msg.payload}`)\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4da7c1a5.28707",
        "type": "subflow",
        "name": "Internal API",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 320,
                "wires": [
                    {
                        "id": "3de2709b.1e637"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "bcfcfdcc.15b708",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "node_red_admin_passhash",
                "type": "env",
                "value": "NODE_RED_ADMIN_PASSHASH"
            },
            {
                "name": "node_red_host",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "node_red_port",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "node_red_url",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "node_red_api_root",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "game_session_name",
                "type": "env",
                "value": "GAME_SESSION_NAME"
            }
        ]
    },
    {
        "id": "42dcb0aa.e868a8",
        "type": "http response",
        "z": "4da7c1a5.28707",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "d674b490.0f6ce8",
        "type": "function",
        "z": "4da7c1a5.28707",
        "name": "Set Content-Type header",
        "func": "msg.headers = {\n    \"Content-Type\":\"image/jpeg\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "42dcb0aa.e868a8"
            ]
        ]
    },
    {
        "id": "4de62b0f.794fdc",
        "type": "file in",
        "z": "4da7c1a5.28707",
        "name": "",
        "filename": "/tmp/example.jpg",
        "format": "",
        "sendError": true,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "d674b490.0f6ce8"
            ]
        ]
    },
    {
        "id": "309bc613.abda92",
        "type": "http in",
        "z": "4da7c1a5.28707",
        "name": "",
        "url": "/testImage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "4de62b0f.794fdc"
            ]
        ]
    },
    {
        "id": "579944f3.a689b4",
        "type": "comment",
        "z": "4da7c1a5.28707",
        "name": "HTTP API",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "189b96cd.d7f871",
        "type": "http request",
        "z": "4da7c1a5.28707",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "bcfcfdcc.15b708",
                "b95b9d5a.2197c8"
            ]
        ]
    },
    {
        "id": "3de2709b.1e637",
        "type": "function",
        "z": "4da7c1a5.28707",
        "name": "setInternalRequest",
        "func": "try {\n    const host = env.get(\"node_red_host\");\n    const port = env.get(\"node_red_port\");\n    const apiRoot = env.get(\"node_red_api_root\");\n    const url = env.get(\"node_red_url\");\n    const token = env.get(\"node_red_admin_passhash\");\n    //  console.log(\"token\", token)\n    //  msg.url = `http://${host}:${port}/${apiRoot}/start`;\n    if (!token) throw new Error(\"No token retrieved\");\n    let reqUrl;\n    //  console.log(\"payload\", msg.payload)\n    if (msg.payload.requestUrl) {\n        reqUrl = msg.payload.requestUrl;\n    } else {\n        reqUrl = \"start\";\n    }\n    let method;\n    if (msg.payload.method) {\n        method = msg.payload.method;\n    } else {\n        method = \"GET\";\n    }\n    msg.url = `${url}/${reqUrl}`;\n    msg.method = method;\n    msg.headers = {};\n    msg.headers['Authorization'] = token;\n    msg.headers['Accept'] = \"application/json\";\n    msg.headers['Content-Type'] = \"application/json\";\n    msg.headers['x-access-token'] = token;\n    if (msg.payload.query) {\n        //  msg.body = msg.payload.query;\n        const query = JSON.stringify(msg.payload.query);\n        msg.payload = query;\n        console.log(\"payload\", msg.payload)\n    } else {\n        msg.payload = {token, userId: 'test'};\n    }\n    //  msg.query = {filter};\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "189b96cd.d7f871",
                "b95b9d5a.2197c8"
            ]
        ]
    },
    {
        "id": "bcfcfdcc.15b708",
        "type": "function",
        "z": "4da7c1a5.28707",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b95b9d5a.2197c8",
        "type": "debug",
        "z": "4da7c1a5.28707",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "1ee78b8b.a95a8c",
        "type": "subflow",
        "name": "device-rx",
        "info": "",
        "category": "aloes",
        "in": [],
        "out": [
            {
                "x": 800,
                "y": 200,
                "wires": [
                    {
                        "id": "33f00a8b.151b46",
                        "port": 0
                    }
                ]
            },
            {
                "x": 800,
                "y": 260,
                "wires": [
                    {
                        "id": "33f00a8b.151b46",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY ",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "c8e86e02.17f3e",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "3a13f4df.b99004",
        "type": "function",
        "z": "1ee78b8b.a95a8c",
        "name": "parsePacket",
        "func": "msg.parts = msg.topic.split(\"/\");\nif (env.get(\"debug\")) {\n    return [msg,msg];\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "33f00a8b.151b46"
            ],
            [
                "7a9e4dcd.671a94"
            ]
        ]
    },
    {
        "id": "7a9e4dcd.671a94",
        "type": "debug",
        "z": "1ee78b8b.a95a8c",
        "name": "Device-rx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "d177c648.f49d",
        "type": "mqtt in",
        "z": "1ee78b8b.a95a8c",
        "name": "Aloes-out",
        "topic": "${DEVICE_IN_TOPIC}",
        "qos": "0",
        "datatype": "auto",
        "broker": "bd2446ca.745a8",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "3a13f4df.b99004"
            ]
        ]
    },
    {
        "id": "33f00a8b.151b46",
        "type": "subflow:ebc4bcba.a49458",
        "z": "1ee78b8b.a95a8c",
        "name": "",
        "env": [
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "env",
                "value": "debug"
            }
        ],
        "x": 660,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "c8e86e02.17f3e",
        "type": "status",
        "z": "1ee78b8b.a95a8c",
        "name": "",
        "scope": [
            "d177c648.f49d"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ebc4bcba.a49458",
        "type": "subflow",
        "name": "set-sensor",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 260,
                "y": 220,
                "wires": [
                    {
                        "id": "dcc122bb.ab8108"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 180,
                "wires": [
                    {
                        "id": "dcc122bb.ab8108",
                        "port": 0
                    }
                ]
            },
            {
                "x": 600,
                "y": 260,
                "wires": [
                    {
                        "id": "dcc122bb.ab8108",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "device_name",
                "type": "str",
                "value": ""
            },
            {
                "name": "store_type",
                "type": "str",
                "value": "memory"
            }
        ]
    },
    {
        "id": "dcc122bb.ab8108",
        "type": "function",
        "z": "ebc4bcba.a49458",
        "name": "setSensor",
        "func": "try {\n    if (msg.parts && msg.parts !== null) {\n        const storeType = env.get(\"store_type\") || \"memory\";\n        //  console.log('updateInstance', deviceName);\n        const method = msg.parts[1];\n        const objectId = msg.parts[2];\n        const sensorId = msg.parts[3];\n        const resourceId = msg.parts[4];\n        if (!method || !objectId || !sensorId || !resourceId) {\n            return [null,new Error(\"missing params\")];\n        }\n        let sensor;\n        global.get(`sensor-${sensorId}`, storeType, (err, res) => {\n            if (err) throw err;\n            sensor = res;\n        });\n        if (!sensor || sensor === null) {\n            sensor = {};\n        }\n        if (!sensor.resources) {\n            sensor.resources = {};\n        }\n        sensor.resources[resourceId] = msg.payload;\n        sensor.type = Number(objectId);\n        sensor.resource = Number(resourceId);\n        sensor.value = msg.payload;\n        if (method === \"1\") {\n            console.log('updateInstance', sensorId, sensor.type, sensor.resource);\n            global.set(`sensor-${sensorId}`, sensor, storeType, (err) => {\n                if(err) throw err;\n            });    \n        }\n        msg.payload = sensor;\n        const msg2 = {payload: sensor.value, topic: msg.topic, parts: msg.parts};\n        return [msg, msg2];\n    }\n    throw new Error(\"No msg.parts\")\n} catch(error){\n    //  console.log('updateInstance : error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 390,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ffcc136f.29f3d",
        "type": "subflow",
        "name": "device-tx",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 180,
                "y": 260,
                "wires": [
                    {
                        "id": "bf7530b.bba45d"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "5f65a1db.0575a",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "18581e6f.7ed44a",
        "type": "mqtt out",
        "z": "ffcc136f.29f3d",
        "name": "Aloes-in",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "bd2446ca.745a8",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "db81d283.8f362",
        "type": "debug",
        "z": "ffcc136f.29f3d",
        "name": "Device-tx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 320,
        "y": 360,
        "wires": []
    },
    {
        "id": "bf7530b.bba45d",
        "type": "function",
        "z": "ffcc136f.29f3d",
        "name": "topicParser",
        "func": "try {\n    if (msg.topic && msg.topic !== null) {\n        const t = msg.topic.split(\"/\");\n        const storeType = env.get(\"NODE_RED_STORE_TYPE\") || \"memory\";\n        const deviceName = env.get(\"DEVICE_NAME\");\n        if (!deviceName) throw new Error(\"no name found\");\n        let device;\n        global.get(deviceName, storeType, (err, res)=> {\n            if (err) throw err;\n            device = res;\n        });\n        if (!device) throw new Error(\"no device found\");\n        const method = t[0];\n        const objectId = t[1];\n        const sensorId = t[2];\n        const resourceId = t[3];\n        msg.topic = `${device.devEui}${device.outPrefix}/${method}/${objectId}/${sensorId}/${resourceId}`;\n        msg.parts = msg.topic.split(\"/\");\n        if (env.get(\"debug\")){\n            return [msg,msg];\n        }\n        return [msg,null];  \n    }\n    throw new Error(\"No msg.topic\");\n} catch(error){\n    //  console.log('error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "f126087a.f14518"
            ],
            [
                "db81d283.8f362"
            ]
        ]
    },
    {
        "id": "f126087a.f14518",
        "type": "subflow:ebc4bcba.a49458",
        "z": "ffcc136f.29f3d",
        "name": "",
        "env": [
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "env",
                "value": "debug"
            }
        ],
        "x": 580,
        "y": 260,
        "wires": [
            [],
            [
                "18581e6f.7ed44a"
            ]
        ]
    },
    {
        "id": "5f65a1db.0575a",
        "type": "status",
        "z": "ffcc136f.29f3d",
        "name": "",
        "scope": [
            "18581e6f.7ed44a"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bd2446ca.745a8",
        "type": "mqtt-broker",
        "z": "",
        "name": "Aloes-Client",
        "broker": "${ALOES_MQTT_HOST}",
        "port": "${ALOES_MQTT_PORT}",
        "clientid": "${DEVICE_DEVEUI}",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "bfc67bb4.8e3e5",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "MQTT OUT",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 810,
        "y": 3620,
        "wires": []
    },
    {
        "id": "276b33c2.4503c4",
        "type": "subflow:ffcc136f.29f3d",
        "z": "5c4543a5.5f2a34",
        "name": "",
        "env": [],
        "x": 1060,
        "y": 3700,
        "wires": []
    },
    {
        "id": "3adbd599.cd468a",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "MQTT IN",
        "info": "",
        "x": 160,
        "y": 3580,
        "wires": []
    },
    {
        "id": "33d1fd18.730ab2",
        "type": "subflow:1ee78b8b.a95a8c",
        "z": "5c4543a5.5f2a34",
        "name": "",
        "env": [],
        "x": 160,
        "y": 3700,
        "wires": [
            [],
            [
                "a3f30fbd.dc9308"
            ]
        ]
    },
    {
        "id": "b9f49a64.2540e8",
        "type": "subflow:4da7c1a5.28707",
        "z": "5c4543a5.5f2a34",
        "name": "nodeRedServer",
        "env": [],
        "x": 300,
        "y": 3500,
        "wires": [
            [
                "391f9390.283664"
            ]
        ]
    },
    {
        "id": "bf7ab67f.34b56",
        "type": "link in",
        "z": "5c4543a5.5f2a34",
        "name": "->node-red-http-in",
        "links": [
            "b6a4e8ff.1b1848",
            "cb3f010.077a6",
            "bd30fa14.040b68",
            "7ce9e55f.ab835c"
        ],
        "x": 155,
        "y": 3500,
        "wires": [
            [
                "b9f49a64.2540e8"
            ]
        ]
    },
    {
        "id": "391f9390.283664",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "node-red-http-in->",
        "links": [],
        "x": 435,
        "y": 3500,
        "wires": []
    },
    {
        "id": "bb5795d8.a23028",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "HTTP IN",
        "info": "",
        "x": 160,
        "y": 3420,
        "wires": []
    },
    {
        "id": "3c5e56cf.7a919a",
        "type": "ui_template",
        "z": "5c4543a5.5f2a34",
        "group": "a12c0235.79851",
        "name": "device-status",
        "order": 1,
        "width": "12",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 250 40\" id=\"{{'devices-status-'+ $id}}\">\n    <text x=\"0\" y=\"25\" style=\"{{'font-weight:700'}}\" >{{$deviceName}}</text>\n    <circle id=\"{{'devices-status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"Waiting\";\n        scope.$deviceName = \"\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && msg.device) {\n            scope.$deviceName = msg.device.name;\n            if (msg && (msg.device.status === true || msg.device.status === \"true\")) {\n                scope.$statusColor = \"#baff00\";\n                scope.$statusText = \"Ready\";\n            }\n        }\n        return msg;\n    } catch(error){\n        return error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 580,
        "y": 3640,
        "wires": [
            []
        ]
    },
    {
        "id": "8b297092.1e1ad",
        "type": "status",
        "z": "5c4543a5.5f2a34",
        "name": "device-rx status",
        "scope": [
            "33d1fd18.730ab2",
            "276b33c2.4503c4"
        ],
        "x": 180,
        "y": 3640,
        "wires": [
            [
                "a253fc2f.88f46"
            ]
        ]
    },
    {
        "id": "a253fc2f.88f46",
        "type": "function",
        "z": "5c4543a5.5f2a34",
        "name": "parseStatus",
        "func": "try {\n    let status = false;\n    msg.device = {};\n    msg.device.name = env.get(\"DEVICE_NAME\");\n    if (msg.status && msg.status.text && msg.status.text.startsWith(\"node-red:common.status.\")) {\n        if (msg.status.text.endsWith(\"connected\")) {\n            msg.device.status = true;\n        } else if (msg.status.text.endsWith(\"disconnected\")) {\n            msg.device.status = false;\n        }\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 3640,
        "wires": [
            [
                "3c5e56cf.7a919a"
            ]
        ]
    },
    {
        "id": "6033cf79.966dc",
        "type": "switch",
        "z": "5c4543a5.5f2a34",
        "name": "3306-resourceId",
        "property": "parts[4]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5850",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5851",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 713,
        "y": 3798,
        "wires": [
            [
                "7c351879.5670a8"
            ],
            [
                "81b1e4c4.01b648"
            ]
        ]
    },
    {
        "id": "a3f30fbd.dc9308",
        "type": "switch",
        "z": "5c4543a5.5f2a34",
        "name": "Method",
        "property": "parts[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 306.75,
        "y": 3869.25,
        "wires": [
            [
                "ff0d4c04.d05338"
            ],
            [],
            []
        ]
    },
    {
        "id": "ff0d4c04.d05338",
        "type": "switch",
        "z": "5c4543a5.5f2a34",
        "name": "POST-objectId",
        "property": "parts[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3306",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3339",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500.5,
        "y": 3805.5,
        "wires": [
            [
                "6033cf79.966dc"
            ],
            []
        ]
    },
    {
        "id": "7c351879.5670a8",
        "type": "switch",
        "z": "5c4543a5.5f2a34",
        "name": "5850-sensorId",
        "property": "parts[3]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 971.75,
        "y": 3839.25,
        "wires": [
            [
                "30b9b555.b74e8a"
            ]
        ]
    },
    {
        "id": "81b1e4c4.01b648",
        "type": "switch",
        "z": "5c4543a5.5f2a34",
        "name": "5851-sensorId",
        "property": "parts[3]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 968.75,
        "y": 4041.25,
        "wires": [
            [
                "6bcd1576.d709e4"
            ]
        ]
    },
    {
        "id": "6628f968.2cfb1",
        "type": "link in",
        "z": "5c4543a5.5f2a34",
        "name": "device-out->",
        "links": [
            "86555b57.0ce178",
            "c02c323b.a522e8",
            "c924817e.c1dda8",
            "cdfa2c16.a4346",
            "a0851ee8.48fe4",
            "142d71d0.baf866"
        ],
        "x": 911.75,
        "y": 3700.5,
        "wires": [
            [
                "276b33c2.4503c4"
            ]
        ]
    },
    {
        "id": "6bcd1576.d709e4",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "1/3306/1/5851",
        "links": [
            "3e751804.eca5"
        ],
        "x": 1083.75,
        "y": 4021.25,
        "wires": []
    },
    {
        "id": "e1e3528c.b67e18",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "1/3306/1/5850",
        "links": [
            "7afbd790.a1ad7",
            "782d9f43.e797b8",
            "8cd67a7b.5dddd8"
        ],
        "x": 1275,
        "y": 3820,
        "wires": []
    },
    {
        "id": "30b9b555.b74e8a",
        "type": "subflow:e6c959b8.c52c2",
        "z": "5c4543a5.5f2a34",
        "name": "",
        "env": [
            {
                "name": "resource_id",
                "type": "str",
                "value": "5850"
            }
        ],
        "x": 1170,
        "y": 3820,
        "wires": [
            [
                "e1e3528c.b67e18"
            ]
        ]
    },
    {
        "id": "7fa10c0.a22ac74",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "Sensors presentations",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 180,
        "y": 4320,
        "wires": []
    },
    {
        "id": "afc1cd1f.b0ed2",
        "type": "inject",
        "z": "5c4543a5.5f2a34",
        "name": "HEAD/3306/1/5850",
        "topic": "0/3306/1/5850",
        "payload": "digital_input",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 240,
        "y": 4380,
        "wires": [
            [
                "73e0c742.912ee"
            ]
        ]
    },
    {
        "id": "73e0c742.912ee",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "device-presentations->",
        "links": [
            "382b8f44.bd6608"
        ],
        "x": 572,
        "y": 4462,
        "wires": []
    },
    {
        "id": "550341b9.ec0798",
        "type": "inject",
        "z": "5c4543a5.5f2a34",
        "name": "refreshState",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "1.5",
        "x": 760,
        "y": 4520,
        "wires": [
            [
                "f0892b13.6ade08"
            ]
        ]
    },
    {
        "id": "f0892b13.6ade08",
        "type": "change",
        "z": "5c4543a5.5f2a34",
        "name": "sensor-1-5850",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sensor-1.resources[\"5850\"]",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 4420,
        "wires": [
            [
                "443a32e9.3542c4"
            ]
        ]
    },
    {
        "id": "cddfd95c.b14c5",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "Sensors State",
        "info": "",
        "x": 750,
        "y": 4320,
        "wires": []
    },
    {
        "id": "443a32e9.3542c4",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "1/3306/5/5850",
        "links": [
            "dcaf625f.4de11"
        ],
        "x": 1115,
        "y": 4420,
        "wires": []
    },
    {
        "id": "3841f625.7d1272",
        "type": "comment",
        "z": "5c4543a5.5f2a34",
        "name": "Interfaces",
        "info": "",
        "x": 140,
        "y": 4640,
        "wires": []
    },
    {
        "id": "8cd67a7b.5dddd8",
        "type": "link in",
        "z": "5c4543a5.5f2a34",
        "name": "SWITCH/3306/1/5850",
        "links": [
            "3b6400a5.a09e18",
            "e1e3528c.b67e18"
        ],
        "x": 135,
        "y": 4780,
        "wires": [
            [
                "616398ef.1384b8"
            ]
        ]
    },
    {
        "id": "616398ef.1384b8",
        "type": "ui_button",
        "z": "5c4543a5.5f2a34",
        "name": "POST/3306/1/5850",
        "group": "907ca740.9d4a8",
        "order": 5,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "button-1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "1/3306/1/5850",
        "x": 490,
        "y": 4780,
        "wires": [
            [
                "142d71d0.baf866"
            ]
        ]
    },
    {
        "id": "142d71d0.baf866",
        "type": "link out",
        "z": "5c4543a5.5f2a34",
        "name": "interfaces-out",
        "links": [
            "382b8f44.bd6608",
            "6628f968.2cfb1"
        ],
        "x": 955,
        "y": 4920,
        "wires": []
    },
    {
        "id": "a12c0235.79851",
        "type": "ui_group",
        "z": "",
        "name": "Device-interfaces",
        "tab": "a4f8a310.eae1a",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "907ca740.9d4a8",
        "type": "ui_group",
        "z": "",
        "name": "Device-interfaces",
        "tab": "2c54c717.5da598",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "a4f8a310.eae1a",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2c54c717.5da598",
        "type": "ui_tab",
        "z": "",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
