[
    {
        "id": "c3e1e518.dae03",
        "type": "subflow",
        "name": "set-boolean",
        "info": "",
        "category": "function",
        "in": [
            {
                "x": 380,
                "y": 120,
                "wires": [
                    {
                        "id": "1f4d5799.670848"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 740,
                "y": 120,
                "wires": [
                    {
                        "id": "1f4d5799.670848",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "resource_id",
                "type": "str",
                "value": ""
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            }
        ],
        "icon": "font-awesome/fa-check"
    },
    {
        "id": "1f4d5799.670848",
        "type": "function",
        "z": "c3e1e518.dae03",
        "name": "setBoolean",
        "func": "try {\n    const debug = env.get(\"debug\");\n    if (!msg || msg === null || !msg.payload) throw new Error(\"No input to parse\");\n    const resourceId = env.get(\"resource_id\");\n    if (!resourceId) throw new Error(\"no resource id set\")\n    const value = msg.payload;\n    if (debug) {\n        console.log(`get-boolean for ${resourceId} : ${typeof value}`)\n    }\n    if (typeof value === \"string\") {\n        msg.payload = value; \n    } else if (typeof value === \"number\") {\n        msg.payload = value.toString(); \n    } else if (typeof value === \"boolean\") {\n        msg.payload = value; \n    } else if (typeof value === \"object\" && value.type && value.data){\n        //  msg.payload = value.data.toString('utf-8');\n        msg.payload = Buffer.from(value.data).toString('utf-8');\n    } else if (Buffer.isBuffer(value)){\n        msg.payload = value.toString('utf-8');\n    } else if (value instanceof Array) {\n        msg.payload = Buffer.from(value).toString('utf-8');\n    } else {\n        throw new Error(\"No value found\")\n    }\n    if (msg.payload === \"true\" || msg.payload === \"1\" || msg.payload === 1) {\n        msg.payload = true;\n    } else if (msg.payload === \"false\" || msg.payload === \"0\" || msg.payload === 0) {\n        msg.payload = false;\n    }\n    if (debug) {\n        console.log(`set-boolean for ${resourceId} : ${msg.payload}`)\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5d795c24.32568c",
        "type": "subflow",
        "name": "ui-router",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 240,
                "wires": [
                    {
                        "id": "1f85a0b.6d34edf"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "abbcbac0.c46c18",
        "type": "comment",
        "z": "5d795c24.32568c",
        "name": "INPUT",
        "info": "- receive tabs ( pages ) changes events.\n\n- validate group diplay based on each tab accessed and global state",
        "x": 170,
        "y": 80,
        "wires": []
    },
    {
        "id": "1f85a0b.6d34edf",
        "type": "switch",
        "z": "5d795c24.32568c",
        "name": "tab name",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "game",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "devices",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "settings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 380,
        "y": 240,
        "wires": [
            [],
            [
                "89880a07.8b8428",
                "595a71d0.4cbc78"
            ],
            [
                "f20ddb39.bbfbf8"
            ]
        ]
    },
    {
        "id": "f29c7df4.fd72c",
        "type": "ui_ui_control",
        "z": "5d795c24.32568c",
        "name": "init-ui",
        "x": 1010,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f20ddb39.bbfbf8",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "showAuth",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"settings_auth\"],\"hide\":[\"settings_aloes\",\"settings_commands\",\"settings_device\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 280,
        "wires": [
            [
                "f29c7df4.fd72c"
            ]
        ]
    },
    {
        "id": "20e535d4.c0ee6a",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "showContent",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"settings_auth\"],\"show\":[\"settings_aloes\",\"settings_commands\",\"settings_device\",\"settings_node-red\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 400,
        "wires": [
            [
                "f29c7df4.fd72c"
            ]
        ]
    },
    {
        "id": "d0b8a93b.908868",
        "type": "function",
        "z": "5d795c24.32568c",
        "name": "",
        "func": "try {\n    let sequenceIsValid = false;\n    let tooManyAttempts = false;\n    let number1;\n    flow.get(\"number1\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number1 = res;\n    })\n    let number2;\n    flow.get(\"number2\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number2 = res;\n    })\n    let number3;\n    flow.get(\"number3\", \"memory\", (err, res) => {\n        if (err) throw err;\n        number3 = res;\n    })\n    \n    if (number1 === 1 && number2 === 1 && number3 === 2) {\n        sequenceIsValid = true;\n    }\n    // increment countdown\n    if (sequenceIsValid === true) {\n        return msg;\n    } \n    return null;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 400,
        "wires": [
            [
                "20e535d4.c0ee6a"
            ]
        ]
    },
    {
        "id": "a49115fd.6506d8",
        "type": "ui_button",
        "z": "5d795c24.32568c",
        "name": "",
        "group": "87b64dbf.2bcf78",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "validate",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "d0b8a93b.908868"
            ]
        ]
    },
    {
        "id": "f45242c5.ade89",
        "type": "ui_numeric",
        "z": "5d795c24.32568c",
        "name": "number1",
        "label": "",
        "tooltip": "",
        "group": "87b64dbf.2bcf78",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 180,
        "y": 460,
        "wires": [
            [
                "c3783991.4f4ad8"
            ]
        ]
    },
    {
        "id": "50c6fe67.302b9",
        "type": "ui_numeric",
        "z": "5d795c24.32568c",
        "name": "number2",
        "label": "",
        "tooltip": "",
        "group": "87b64dbf.2bcf78",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 180,
        "y": 500,
        "wires": [
            [
                "1b828241.3fb93e"
            ]
        ]
    },
    {
        "id": "39b7abdd.2ca57c",
        "type": "ui_numeric",
        "z": "5d795c24.32568c",
        "name": "number3",
        "label": "",
        "tooltip": "",
        "group": "87b64dbf.2bcf78",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": 0,
        "max": "9",
        "step": 1,
        "x": 180,
        "y": 540,
        "wires": [
            [
                "24af381c.51b46"
            ]
        ]
    },
    {
        "id": "c3783991.4f4ad8",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1b828241.3fb93e",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "24af381c.51b46",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "number3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "89880a07.8b8428",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "setDeviceTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "{\"command\":\"refresh\",\"collection\":\"device\"}",
                "tot": "json"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "tab",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "socketid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "socketip",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "name",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "accdfa6a.e83468"
            ]
        ]
    },
    {
        "id": "69abbea8.135768",
        "type": "debug",
        "z": "5d795c24.32568c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "accdfa6a.e83468",
        "type": "delay",
        "z": "5d795c24.32568c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 840,
        "y": 180,
        "wires": [
            [
                "69abbea8.135768"
            ]
        ]
    },
    {
        "id": "595a71d0.4cbc78",
        "type": "change",
        "z": "5d795c24.32568c",
        "name": "setSensorTrigger",
        "rules": [
            {
                "t": "set",
                "p": "trigger",
                "pt": "msg",
                "to": "{\"command\":\"refresh\",\"collection\":\"sensor\"}",
                "tot": "json"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "tab",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "socketid",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "socketip",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "name",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 220,
        "wires": [
            [
                "638e0efd.d3913"
            ]
        ]
    },
    {
        "id": "638e0efd.d3913",
        "type": "delay",
        "z": "5d795c24.32568c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 840,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "87b64dbf.2bcf78",
        "type": "ui_group",
        "z": "",
        "name": "auth",
        "tab": "dfad4b78.87c12",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fb539252.4e5408",
        "type": "subflow",
        "name": "device-tx",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 180,
                "y": 260,
                "wires": [
                    {
                        "id": "2a27ccf5.e6ab1c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "e6b9ae89.c7fa5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ebce640e.3f3968",
        "type": "mqtt out",
        "z": "fb539252.4e5408",
        "name": "Aloes-in",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "2023ad60.b7a6aa",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "13d22ef9.8b54b1",
        "type": "debug",
        "z": "fb539252.4e5408",
        "name": "Device-tx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 320,
        "y": 360,
        "wires": []
    },
    {
        "id": "2a27ccf5.e6ab1c",
        "type": "function",
        "z": "fb539252.4e5408",
        "name": "topicParser",
        "func": "try {\n    if (msg.topic && msg.topic !== null) {\n        const t = msg.topic.split(\"/\");\n        const storeType = env.get(\"NODE_RED_STORE_TYPE\") || \"memory\";\n        const deviceName = env.get(\"DEVICE_NAME\");\n        if (!deviceName) throw new Error(\"no name found\");\n        let device;\n        global.get(deviceName, storeType, (err, res)=> {\n            if (err) throw err;\n            device = res;\n        });\n        if (!device) throw new Error(\"no device found\");\n        const method = t[0];\n        const objectId = t[1];\n        const sensorId = t[2];\n        const resourceId = t[3];\n        msg.topic = `${device.devEui}${device.outPrefix}/${method}/${objectId}/${sensorId}/${resourceId}`;\n        msg.parts = msg.topic.split(\"/\");\n        if (env.get(\"debug\")){\n            return [msg,msg];\n        }\n        return [msg,null];  \n    }\n    throw new Error(\"No msg.topic\");\n} catch(error){\n    //  console.log('error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "94697671.45823"
            ],
            [
                "13d22ef9.8b54b1"
            ]
        ]
    },
    {
        "id": "94697671.45823",
        "type": "subflow:ef1ce974.6f4ce",
        "z": "fb539252.4e5408",
        "name": "",
        "env": [
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "env",
                "value": "debug"
            }
        ],
        "x": 580,
        "y": 260,
        "wires": [
            [],
            [
                "ebce640e.3f3968"
            ]
        ]
    },
    {
        "id": "e6b9ae89.c7fa5",
        "type": "status",
        "z": "fb539252.4e5408",
        "name": "",
        "scope": [
            "ebce640e.3f3968"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ef1ce974.6f4ce",
        "type": "subflow",
        "name": "set-sensor",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 260,
                "y": 220,
                "wires": [
                    {
                        "id": "a705b39f.0d0d4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 600,
                "y": 180,
                "wires": [
                    {
                        "id": "a705b39f.0d0d4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 600,
                "y": 260,
                "wires": [
                    {
                        "id": "a705b39f.0d0d4",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "device_name",
                "type": "str",
                "value": ""
            },
            {
                "name": "store_type",
                "type": "str",
                "value": "memory"
            }
        ]
    },
    {
        "id": "a705b39f.0d0d4",
        "type": "function",
        "z": "ef1ce974.6f4ce",
        "name": "setSensor",
        "func": "try {\n    if (msg.parts && msg.parts !== null) {\n        const storeType = env.get(\"store_type\") || \"memory\";\n        //  console.log('updateInstance', deviceName);\n        const method = msg.parts[1];\n        const objectId = msg.parts[2];\n        const sensorId = msg.parts[3];\n        const resourceId = msg.parts[4];\n        if (!method || !objectId || !sensorId || !resourceId) {\n            return [null,new Error(\"missing params\")];\n        }\n        let sensor;\n        global.get(`sensor-${sensorId}`, storeType, (err, res) => {\n            if (err) throw err;\n            sensor = res;\n        });\n        if (!sensor || sensor === null) {\n            sensor = {};\n        }\n        if (!sensor.resources) {\n            sensor.resources = {};\n        }\n        sensor.resources[resourceId] = msg.payload;\n        sensor.type = Number(objectId);\n        sensor.resource = Number(resourceId);\n        sensor.value = msg.payload;\n        if (method === \"1\") {\n            console.log('updateInstance', sensorId, sensor.type, sensor.resource);\n            global.set(`sensor-${sensorId}`, sensor, storeType, (err) => {\n                if(err) throw err;\n            });    \n        }\n        msg.payload = sensor;\n        const msg2 = {payload: sensor.value, topic: msg.topic, parts: msg.parts};\n        return [msg, msg2];\n    }\n    throw new Error(\"No msg.parts\")\n} catch(error){\n    //  console.log('updateInstance : error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 390,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "8eeb39ef.4880a",
        "type": "subflow",
        "name": "device-rx",
        "info": "",
        "category": "aloes",
        "in": [],
        "out": [
            {
                "x": 800,
                "y": 200,
                "wires": [
                    {
                        "id": "807d5bc3.7ffa9",
                        "port": 0
                    }
                ]
            },
            {
                "x": 800,
                "y": 260,
                "wires": [
                    {
                        "id": "807d5bc3.7ffa9",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY ",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "6d4d1458.2082ec",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "7e3d7eeb.d28928",
        "type": "function",
        "z": "8eeb39ef.4880a",
        "name": "parsePacket",
        "func": "msg.parts = msg.topic.split(\"/\");\nif (env.get(\"debug\")) {\n    return [msg,msg];\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 370,
        "y": 280,
        "wires": [
            [
                "807d5bc3.7ffa9"
            ],
            [
                "87562ed.a81345"
            ]
        ]
    },
    {
        "id": "87562ed.a81345",
        "type": "debug",
        "z": "8eeb39ef.4880a",
        "name": "Device-rx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "2a6024.48f8ffdc",
        "type": "mqtt in",
        "z": "8eeb39ef.4880a",
        "name": "Aloes-out",
        "topic": "${DEVICE_IN_TOPIC}",
        "qos": "0",
        "datatype": "auto",
        "broker": "2023ad60.b7a6aa",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "7e3d7eeb.d28928"
            ]
        ]
    },
    {
        "id": "807d5bc3.7ffa9",
        "type": "subflow:ef1ce974.6f4ce",
        "z": "8eeb39ef.4880a",
        "name": "",
        "env": [
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            },
            {
                "name": "debug",
                "type": "env",
                "value": "debug"
            }
        ],
        "x": 660,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6d4d1458.2082ec",
        "type": "status",
        "z": "8eeb39ef.4880a",
        "name": "",
        "scope": [
            "2a6024.48f8ffdc"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2023ad60.b7a6aa",
        "type": "mqtt-broker",
        "z": "",
        "name": "Aloes-Client",
        "broker": "${ALOES_MQTT_HOST}",
        "port": "${ALOES_MQTT_PORT}",
        "clientid": "${DEVICE_DEVEUI}",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "451e5dd1.047394",
        "type": "subflow",
        "name": "http-api",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 320,
                "wires": [
                    {
                        "id": "36e535c7.ec7fca"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "9e7bdfbc.695de",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "node_red_admin_passhash",
                "type": "env",
                "value": "NODE_RED_ADMIN_PASSHASH"
            },
            {
                "name": "node_red_host",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "node_red_port",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "node_red_url",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "node_red_api_root",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            }
        ]
    },
    {
        "id": "11ecda12.fff306",
        "type": "http response",
        "z": "451e5dd1.047394",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "5a5a0bd3.4aa054",
        "type": "function",
        "z": "451e5dd1.047394",
        "name": "Set Content-Type header",
        "func": "msg.headers = {\n    \"Content-Type\":\"image/jpeg\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 140,
        "wires": [
            [
                "11ecda12.fff306"
            ]
        ]
    },
    {
        "id": "4ff54995.ddc568",
        "type": "file in",
        "z": "451e5dd1.047394",
        "name": "",
        "filename": "/tmp/example.jpg",
        "format": "",
        "sendError": true,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "5a5a0bd3.4aa054"
            ]
        ]
    },
    {
        "id": "ef6b6e3a.e86768",
        "type": "http in",
        "z": "451e5dd1.047394",
        "name": "",
        "url": "/testImage",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "4ff54995.ddc568"
            ]
        ]
    },
    {
        "id": "b68dffe0.5950d",
        "type": "comment",
        "z": "451e5dd1.047394",
        "name": "HTTP API",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "1b6fe30c.053785",
        "type": "http request",
        "z": "451e5dd1.047394",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "proxy": "",
        "authType": "basic",
        "x": 570,
        "y": 320,
        "wires": [
            [
                "9e7bdfbc.695de",
                "3dafcdbc.a1f19a"
            ]
        ]
    },
    {
        "id": "36e535c7.ec7fca",
        "type": "function",
        "z": "451e5dd1.047394",
        "name": "setInternalRequest",
        "func": "try {\n    const host = env.get(\"node_red_host\");\n    const port = env.get(\"node_red_port\");\n    const apiRoot = env.get(\"node_red_api_root\");\n    const url = env.get(\"node_red_url\");\n    const token = env.get(\"node_red_admin_passhash\");\n    //  console.log(\"token\", token)\n    //  msg.url = `http://${host}:${port}/${apiRoot}/start`;\n    if (!token) throw new Error(\"No token retrieved\");\n    let reqUrl;\n    //  console.log(\"payload\", msg.payload)\n    if (msg.payload.requestUrl) {\n        reqUrl = msg.payload.requestUrl;\n    } else {\n        reqUrl = \"start\";\n    }\n    let method;\n    if (msg.payload.method) {\n        method = msg.payload.method;\n    } else {\n        method = \"GET\";\n    }\n    msg.url = `${url}/${reqUrl}`;\n    msg.method = method;\n    msg.headers = {};\n    msg.headers['Authorization'] = token;\n    msg.headers['Accept'] = \"application/json\";\n    msg.headers['Content-Type'] = \"application/json\";\n    msg.headers['x-access-token'] = token;\n    if (msg.payload.query) {\n        //  msg.body = msg.payload.query;\n        const query = JSON.stringify(msg.payload.query);\n        msg.payload = query;\n        console.log(\"payload\", msg.payload)\n    } else {\n        msg.payload = {token, userId: 'test'};\n    }\n    //  msg.query = {filter};\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 320,
        "wires": [
            [
                "1b6fe30c.053785",
                "3dafcdbc.a1f19a"
            ]
        ]
    },
    {
        "id": "9e7bdfbc.695de",
        "type": "function",
        "z": "451e5dd1.047394",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3dafcdbc.a1f19a",
        "type": "debug",
        "z": "451e5dd1.047394",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "7a4f0314.f6e1d4",
        "type": "subflow",
        "name": "set-device",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 160,
                "y": 100,
                "wires": [
                    {
                        "id": "409d755d.91b0ec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 100,
                "wires": [
                    {
                        "id": "409d755d.91b0ec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_TYPE",
                "type": "env",
                "value": "DEVICE_TYPE"
            },
            {
                "name": "DEVICE_IN_PREFIX",
                "type": "env",
                "value": "DEVICE_IN_PREFIX"
            },
            {
                "name": "DEVICE_OUT_PREFIX",
                "type": "env",
                "value": "DEVICE_OUT_PREFIX"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ]
    },
    {
        "id": "409d755d.91b0ec",
        "type": "function",
        "z": "7a4f0314.f6e1d4",
        "name": "setState",
        "func": "try {\n    const storeType = env.get(\"NODE_RED_STORE_TYPE\") || \"memory\";\n    const deviceName = env.get(\"DEVICE_NAME\") || \"node-red-device\";\n    let device;\n    global.get(deviceName, storeType, (err, res) => {\n        if (err) throw err;\n        device = res;\n    });\n    if (!device || device === null) {\n        device = {\n            devEui : env.get(\"DEVICE_DEVEUI\"),\n            id : env.get(\"DEVICE_ID\"),\n            appKey: env.get(\"DEVICE_APPKEY\"),\n            type : env.get(\"DEVICE_TYPE\") || \"node\",\n            name : deviceName,\n            inPrefix: env.get(\"DEVICE_IN_PREFIX\") ||\"-in\",\n            outPrefix: env.get(\"DEVICE_OUT_PREFIX\") || \"-out\"\n        };    \n    } else {\n        device.devEui = env.get(\"DEVICE_DEVEUI\");\n        device.id = env.get(\"DEVICE_ID\");\n        device.appKey = env.get(\"DEVICE_APPKEY\");\n        device.type = env.get(\"DEVICE_TYPE\") || \"node\";\n        device.name = deviceName;\n        device.inPrefix = env.get(\"DEVICE_IN_PREFIX\") || \"-in\";\n        device.outPrefix = env.get(\"DEVICE_OUT_PREFIX\") || \"-out\";\n    }\n    if (device && device.devEui && device.name) {\n       global.set(device.name, device, storeType, (err) => {\n            if(err) throw err;\n        }); \n    }\n    msg.payload = device;\n    return msg;  \n} catch(error) {\n    console.log(\"setState: error\", error);\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3f8f33.9979f",
        "type": "subflow",
        "name": "device-settings",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 80,
                "y": 320,
                "wires": [
                    {
                        "id": "a5169f4e.028e2"
                    },
                    {
                        "id": "51c3196d.af4b8"
                    },
                    {
                        "id": "ae813414.4b5aa8"
                    },
                    {
                        "id": "9c63c4eb.518bf"
                    },
                    {
                        "id": "3353985b.3814f8"
                    },
                    {
                        "id": "fe7d55c4.0907a"
                    },
                    {
                        "id": "eefe3652.a6d82"
                    },
                    {
                        "id": "c36077a9.fdd148"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 580,
                "wires": [
                    {
                        "id": "fada992.47321e8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_TYPE",
                "type": "env",
                "value": "DEVICE_TYPE"
            },
            {
                "name": "DEVICE_IN_PREFIX",
                "type": "env",
                "value": "DEVICE_IN_PREFIX"
            },
            {
                "name": "DEVICE_IN_PREFIX",
                "type": "env",
                "value": "DEVICE_OUT_PREFIX"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "font-awesome/fa-cog"
    },
    {
        "id": "a5169f4e.028e2",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceInPrefix",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_IN_PREFIX",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 440,
        "wires": [
            [
                "f72a9117.459ba"
            ]
        ]
    },
    {
        "id": "f72a9117.459ba",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "InPrefix ",
        "tooltip": "mqtt subscription route :  devEui<InPrefix>, default : -in",
        "group": "404e0261.a8456c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 580,
        "y": 440,
        "wires": [
            [
                "c9408161.10e3a"
            ]
        ]
    },
    {
        "id": "c9408161.10e3a",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceInPrefix",
        "rules": [
            {
                "t": "set",
                "p": "deviceInPrefix",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "51c3196d.af4b8",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceOutPrefix",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_OUT_PREFIX",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 480,
        "wires": [
            [
                "626d6a5f.8585fc"
            ]
        ]
    },
    {
        "id": "626d6a5f.8585fc",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "OutPrefix ",
        "tooltip": "mqtt publish route :  devEui<OutPrefix>/ default : -out",
        "group": "404e0261.a8456c",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 580,
        "y": 480,
        "wires": [
            [
                "de8b4a42.a7d63"
            ]
        ]
    },
    {
        "id": "de8b4a42.a7d63",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceOutPrefix",
        "rules": [
            {
                "t": "set",
                "p": "deviceOutPrefix",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ae813414.4b5aa8",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceInTopic",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_IN_TOPIC",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 400,
        "wires": [
            [
                "f63a7e35.e2f5d"
            ]
        ]
    },
    {
        "id": "f63a7e35.e2f5d",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "InTopic",
        "tooltip": "mqtt subscription route, default <devEui>-in/#",
        "group": "404e0261.a8456c",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 580,
        "y": 400,
        "wires": [
            [
                "64b2c66a.fce3e"
            ]
        ]
    },
    {
        "id": "64b2c66a.fce3e",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceInTopic",
        "rules": [
            {
                "t": "set",
                "p": "deviceInTopic",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "9c63c4eb.518bf",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceType",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_TYPE",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "ed7e7d0e.4480c8"
            ]
        ]
    },
    {
        "id": "ed7e7d0e.4480c8",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "Type",
        "tooltip": "",
        "group": "404e0261.a8456c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e7326729.2a5ec8"
            ]
        ]
    },
    {
        "id": "e7326729.2a5ec8",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceType",
        "rules": [
            {
                "t": "set",
                "p": "deviceType",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "3353985b.3814f8",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceAppKey",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_APPKEY",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 320,
        "wires": [
            [
                "f9dd26f6.f36928"
            ]
        ]
    },
    {
        "id": "f9dd26f6.f36928",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "appKey",
        "tooltip": "",
        "group": "404e0261.a8456c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 580,
        "y": 320,
        "wires": [
            [
                "7b4a1760.4517c"
            ]
        ]
    },
    {
        "id": "7b4a1760.4517c",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceAppKey",
        "rules": [
            {
                "t": "set",
                "p": "deviceAppKey",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fe7d55c4.0907a",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceId",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_ID",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "d2ea0fcc.3ebdc"
            ]
        ]
    },
    {
        "id": "d2ea0fcc.3ebdc",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "Id",
        "tooltip": "",
        "group": "404e0261.a8456c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 280,
        "wires": [
            [
                "b86b2224.101a5"
            ]
        ]
    },
    {
        "id": "b86b2224.101a5",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceId",
        "rules": [
            {
                "t": "set",
                "p": "deviceId",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "eefe3652.a6d82",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceDevEui",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_DEVEUI",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 240,
        "wires": [
            [
                "9a52f82.9523788"
            ]
        ]
    },
    {
        "id": "9a52f82.9523788",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "devEui",
        "tooltip": "",
        "group": "404e0261.a8456c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 240,
        "wires": [
            [
                "cf8bd3e8.476e48"
            ]
        ]
    },
    {
        "id": "cf8bd3e8.476e48",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceDevEui",
        "rules": [
            {
                "t": "set",
                "p": "deviceDevEui",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "872ca911.497d28",
        "type": "debug",
        "z": "bc3f8f33.9979f",
        "name": "deviceSettingsUpdate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 900,
        "y": 640,
        "wires": []
    },
    {
        "id": "c36077a9.fdd148",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceName",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_NAME",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 200,
        "wires": [
            [
                "c44358fc.905378"
            ]
        ]
    },
    {
        "id": "c44358fc.905378",
        "type": "ui_text_input",
        "z": "bc3f8f33.9979f",
        "name": "",
        "label": "name",
        "tooltip": "",
        "group": "404e0261.a8456c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "b5a4154b.1599c8"
            ]
        ]
    },
    {
        "id": "b5a4154b.1599c8",
        "type": "change",
        "z": "bc3f8f33.9979f",
        "name": "deviceName",
        "rules": [
            {
                "t": "set",
                "p": "deviceName",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a0781e68.fcadb8",
        "type": "ui_button",
        "z": "bc3f8f33.9979f",
        "name": "",
        "group": "404e0261.a8456c",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "5d01d802.8bb1f8"
            ]
        ]
    },
    {
        "id": "5d01d802.8bb1f8",
        "type": "delay",
        "z": "bc3f8f33.9979f",
        "name": "1msg/3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 720,
        "y": 580,
        "wires": [
            [
                "fada992.47321e8"
            ]
        ]
    },
    {
        "id": "fada992.47321e8",
        "type": "function",
        "z": "bc3f8f33.9979f",
        "name": "setEnv",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"memoryOnly\";\n    const processEnv = global.get(\"processEnv\", storeType);\n    if (!processEnv) throw new Error(\"process.env unavailable\");\n    const deviceDevEui = flow.get(\"deviceDevEui\");\n   if (deviceDevEui) {\n        processEnv.DEVICE_DEVEUI = deviceDevEui;\n    } \n    const deviceId = flow.get(\"deviceId\");\n    if (deviceId) {\n        processEnv.DEVICE_ID = deviceId;\n    }\n    const deviceAppKey = flow.get(\"deviceAppKey\");\n    if (deviceAppKey) {\n        processEnv.DEVICE_APPKEY = deviceAppKey;\n    }\n    const deviceType = flow.get(\"deviceType\");\n    if (deviceType) {\n        processEnv.DEVICE_TYPE = deviceType;\n    }\n    const deviceName = flow.get(\"deviceName\");\n    if (deviceName) {\n        processEnv.DEVICE_NAME = deviceName;\n    }\n    // ALOES - MQTT CONFIG\n    const deviceInPrefix = flow.get(\"deviceInPrefix\");\n    if (deviceInPrefix) {\n        processEnv.DEVICE_IN_PREFIX = deviceInPrefix;\n    }\n    const deviceOutPrefix = flow.get(\"deviceOutPrefix\");\n    if (deviceOutPrefix) {\n        processEnv.DEVICE_OUT_PREFIX = deviceOutPrefix;\n    }\n    const deviceInTopic = flow.get(\"deviceInTopic\");\n    if (deviceInTopic) {\n        processEnv.DEVICE_IN_TOPIC = deviceInTopic;\n    }\n    if (env.get(\"debug\")) {\n        return [msg,msg];\n    }\n    return [msg,null];\n}catch(error){\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 870,
        "y": 580,
        "wires": [
            [],
            [
                "872ca911.497d28"
            ]
        ]
    },
    {
        "id": "404e0261.a8456c",
        "type": "ui_group",
        "z": "",
        "name": "device",
        "tab": "dfad4b78.87c12",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a6ee8de3.9c14d8",
        "type": "subflow",
        "name": "save-settings",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "97066f1a.54d8e8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 140,
                "wires": [
                    {
                        "id": "f63a7b7e.42bfc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "icon": "node-red/file-out.png"
    },
    {
        "id": "732a1ace.a54544",
        "type": "function",
        "z": "a6ee8de3.9c14d8",
        "name": "saveEnvToFile",
        "func": "try {\n    const processEnv = global.get(\"processEnv\");\n    if (!processEnv) throw new Error(\"process.env not available\");\n    if (!processEnv.NODE_ENV) {\n        msg.filename = \"./.env\";\n    } else {\n        msg.filename = `./deploy/.env_${processEnv.NODE_ENV}`;\n    }\n    msg.payload = `NODE_ENV=${processEnv.NODE_ENV}\nNODE_RED_URL=${processEnv.NODE_RED_URL}\nNODE_RED_HOST=${processEnv.NODE_RED_HOST}\nNODE_RED_PORT=${processEnv.NODE_RED_PORT}\nNODE_RED_ADMIN_ROOT=${processEnv.NODE_RED_ADMIN_ROOT}\nNODE_RED_API_ROOT=${processEnv.NODE_RED_API_ROOT}\nNODE_RED_UI_PATH=${processEnv.NODE_RED_UI_PATH}\nNODE_RED_USER_DIR=${processEnv.NODE_RED_USER_DIR}\nNODE_RED_USERNAME=${processEnv.NODE_RED_USERNAME}\nNODE_RED_USERPASS=${processEnv.NODE_RED_USERPASS}\nNODE_RED_PASSHASH=${processEnv.NODE_RED_PASSHASH}\nNODE_RED_ADMIN_PASSHASH=${processEnv.NODE_RED_ADMIN_PASSHASH}\nNODE_RED_SESSION_SECRET=${processEnv.NODE_RED_SESSION_SECRET}\nNODE_RED_CREDENTIAL_SECRET=${processEnv.NODE_RED_CREDENTIAL_SECRET}\nNODE_RED_STORE_TYPE=${processEnv.NODE_RED_STORE_TYPE}\nALOES_MQTT_HOST=${processEnv.ALOES_MQTT_HOST}\nALOES_MQTT_PORT=${processEnv.ALOES_MQTT_PORT}\nALOES_USER_EMAIL=${processEnv.ALOES_USER_EMAIL}\nALOES_USER_PASSWORD=${processEnv.ALOES_USER_PASSWORD}\nDEVICE_DEVEUI=${processEnv.DEVICE_DEVEUI}\nDEVICE_ID=${processEnv.DEVICE_ID}\nDEVICE_APPKEY=${processEnv.DEVICE_APPKEY}\nDEVICE_TYPE=${processEnv.DEVICE_TYPE}\nDEVICE_NAME=${processEnv.DEVICE_NAME}\nDEVICE_IN_PREFIX=${processEnv.DEVICE_IN_PREFIX}\nDEVICE_OUT_PREFIX=${processEnv.DEVICE_OUT_PREFIX}\nDEVICE_IN_TOPIC=${processEnv.DEVICE_IN_TOPIC}\nSERVER_LOGGER_LEVEL=${processEnv.SERVER_LOGGER_LEVEL}\nTUNNEL_URL=${processEnv.TUNNEL_URL}\nGIT_REPO_SSH_URL=${processEnv.GIT_REPO_SSH_URL}`;\n    return msg;\n} catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 140,
        "wires": [
            [
                "f63a7b7e.42bfc"
            ]
        ]
    },
    {
        "id": "f63a7b7e.42bfc",
        "type": "file",
        "z": "a6ee8de3.9c14d8",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "49dff29d.0ccd6c"
            ]
        ]
    },
    {
        "id": "fdd65081.e3f49",
        "type": "ui_toast",
        "z": "a6ee8de3.9c14d8",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "",
        "name": "",
        "x": 707,
        "y": 257,
        "wires": []
    },
    {
        "id": "49dff29d.0ccd6c",
        "type": "function",
        "z": "a6ee8de3.9c14d8",
        "name": "buildNotif",
        "func": "msg.payload = \"Environment variables file updated, please restart app to validate them.\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 680,
        "y": 200,
        "wires": [
            [
                "fdd65081.e3f49"
            ]
        ]
    },
    {
        "id": "97066f1a.54d8e8",
        "type": "delay",
        "z": "a6ee8de3.9c14d8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 217,
        "y": 137,
        "wires": [
            [
                "732a1ace.a54544"
            ]
        ]
    },
    {
        "id": "835fc3f4.1cbaa",
        "type": "subflow",
        "name": "node-red-settings",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "1f789c3a.688854"
                    },
                    {
                        "id": "b9ea9659.b294a"
                    },
                    {
                        "id": "ac8afadf.fe6a8"
                    },
                    {
                        "id": "74b8f4ad.ebd324"
                    },
                    {
                        "id": "64abdda1.1169a4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1120,
                "y": 340,
                "wires": [
                    {
                        "id": "32236927.1ff636",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "NODE_RED_URL",
                "type": "env",
                "value": "NODE_RED_URL"
            },
            {
                "name": "NODE_RED_HOST",
                "type": "env",
                "value": "NODE_RED_HOST"
            },
            {
                "name": "NODE_RED_PORT",
                "type": "env",
                "value": "NODE_RED_PORT"
            },
            {
                "name": "NODE_RED_ADMIN_ROOT",
                "type": "env",
                "value": "NODE_RED_ADMIN_ROOT"
            },
            {
                "name": "NODE_RED_API_ROOT",
                "type": "env",
                "value": "NODE_RED_API_ROOT"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "font-awesome/fa-cog"
    },
    {
        "id": "1f789c3a.688854",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_HOST",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 140,
        "wires": [
            [
                "c71739b6.a4bf1"
            ]
        ]
    },
    {
        "id": "fb6b893e.1d5738",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedHost",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedHost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c71739b6.a4bf1",
        "type": "ui_text_input",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "label": "HTTP Host",
        "tooltip": "",
        "group": "96ec8e81.8097",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "fb6b893e.1d5738"
            ]
        ]
    },
    {
        "id": "ac8afadf.fe6a8",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_PORT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 180,
        "wires": [
            [
                "a2d6c43d.5ac9d"
            ]
        ]
    },
    {
        "id": "be491737.37a648",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedPort",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedPort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a2d6c43d.5ac9d",
        "type": "ui_text_input",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "label": "HTTP Port",
        "tooltip": "",
        "group": "96ec8e81.8097",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "be491737.37a648"
            ]
        ]
    },
    {
        "id": "7fdb8ad8.cd3544",
        "type": "function",
        "z": "835fc3f4.1cbaa",
        "name": "setEnv",
        "func": "try {\n    const processEnv = global.get(\"processEnv\");\n    if (!processEnv) throw new Error(\"process.env not available\");\n    // NODE-RED CONFIG\n    if (msg.payload.nodeRedUrl) {\n        processEnv.NODE_RED_URL = msg.payload.nodeRedUrl;\n    }   \n    if (msg.payload.nodeRedPort) {\n        processEnv.NODE_RED_PORT = msg.payload.nodeRedPort;\n    }\n    if (msg.payload.nodeRedHost) {\n        processEnv.NODE_RED_HOST = msg.payload.nodeRedHost;\n    }    \n    if (msg.payload.nodeRedAdminRoot) {\n        processEnv.NODE_RED_ADMIN_ROOT = msg.payload.nodeRedAdminRoot;\n    } \n    if (msg.payload.nodeRedApiRoot) {\n        processEnv.NODE_RED_API_ROOT = msg.payload.nodeRedApiRoot;\n    }\n    if (env.get(\"debug\")) {\n        return [msg,msg];\n    }\n    return [msg,null];\n}catch(error){\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 870,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b9ea9659.b294a",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_URL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "bf7230d0.b3e0e"
            ]
        ]
    },
    {
        "id": "65b43cc7.c21264",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedUrl",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedUrl",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "bf7230d0.b3e0e",
        "type": "ui_text_input",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "label": "HTTP URL",
        "tooltip": "",
        "group": "96ec8e81.8097",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 100,
        "wires": [
            [
                "65b43cc7.c21264"
            ]
        ]
    },
    {
        "id": "74b8f4ad.ebd324",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_ADMIN_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 220,
        "wires": [
            [
                "d0c42468.d7078"
            ]
        ]
    },
    {
        "id": "6dc65040.81ace",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedAdminRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedAdminRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d0c42468.d7078",
        "type": "ui_text_input",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "label": "HTTP Admin Root",
        "tooltip": "URL/<admin root>",
        "group": "96ec8e81.8097",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 570,
        "y": 220,
        "wires": [
            [
                "6dc65040.81ace"
            ]
        ]
    },
    {
        "id": "419e1cc2.36826c",
        "type": "ui_text_input",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "label": "HTTP API Root",
        "tooltip": "URL/<api root>",
        "group": "96ec8e81.8097",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 560,
        "y": 260,
        "wires": [
            [
                "5d677b.cccce084"
            ]
        ]
    },
    {
        "id": "64abdda1.1169a4",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "NODE_RED_API_ROOT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "419e1cc2.36826c"
            ]
        ]
    },
    {
        "id": "5d677b.cccce084",
        "type": "change",
        "z": "835fc3f4.1cbaa",
        "name": "nodeRedApiRoot",
        "rules": [
            {
                "t": "set",
                "p": "nodeRedApiRoot",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ca143123.151d5",
        "type": "debug",
        "z": "835fc3f4.1cbaa",
        "name": "NodeRedSettingsUpdate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "54afcdfb.682004",
        "type": "ui_button",
        "z": "835fc3f4.1cbaa",
        "name": "",
        "group": "96ec8e81.8097",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "89d146ad.0c432"
            ]
        ]
    },
    {
        "id": "89d146ad.0c432",
        "type": "delay",
        "z": "835fc3f4.1cbaa",
        "name": "1msg/3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 680,
        "y": 360,
        "wires": [
            [
                "32236927.1ff636"
            ]
        ]
    },
    {
        "id": "32236927.1ff636",
        "type": "function",
        "z": "835fc3f4.1cbaa",
        "name": "setEnv",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"memoryOnly\";\n    const processEnv = global.get(\"processEnv\", storeType);\n    if (!processEnv) throw new Error(\"process.env unavailable\");\n    const nodeRedUrl = flow.get(\"nodeRedUrl\")\n    if (msg.payload.nodeRedUrl) {\n        processEnv.NODE_RED_URL = nodeRedUrl;\n    }  \n    const nodeRedPort = flow.get(\"nodeRedPort\")\n    if (nodeRedPort) {\n        processEnv.NODE_RED_PORT = nodeRedPort;\n    }\n    const nodeRedHost = flow.get(\"nodeRedHost\")\n    if (nodeRedHost) {\n        processEnv.NODE_RED_HOST = nodeRedHost;\n    }  \n    const nodeRedAdminRoot = flow.get(\"nodeRedAdminRoot\")\n    if (nodeRedAdminRoot) {\n        processEnv.NODE_RED_ADMIN_ROOT = nodeRedAdminRoot;\n    } \n    const nodeRedApiRoot = flow.get(\"nodeRedApiRoot\")\n    if (msg.payload.nodeRedApiRoot) {\n        processEnv.NODE_RED_API_ROOT = nodeRedApiRoot;\n    }\n    const tunnelUrl = flow.get(\"tunnelUrl\")\n    if (tunnelUrl) {\n        processEnv.TUNNEL_URL = tunnelUrl;\n    }\n    if (env.get(\"debug\")) {\n        return [msg,msg];\n    }\n    return [msg,null];\n}catch(error){\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 870,
        "y": 360,
        "wires": [
            [],
            [
                "ca143123.151d5"
            ]
        ]
    },
    {
        "id": "96ec8e81.8097",
        "type": "ui_group",
        "z": "",
        "name": "node-red",
        "tab": "dfad4b78.87c12",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a0a15e45.bbc91",
        "type": "subflow",
        "name": "aloes-settings",
        "info": "",
        "category": "aloes",
        "in": [
            {
                "x": 40,
                "y": 360,
                "wires": [
                    {
                        "id": "9e64e1d4.189a08"
                    },
                    {
                        "id": "333e1a0a.508c66"
                    },
                    {
                        "id": "d732be59.6a3d5"
                    },
                    {
                        "id": "135eeb67.47f9b5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 560,
                "wires": [
                    {
                        "id": "b7bb752d.7bbd6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "ALOES_USER_EMAIL",
                "type": "env",
                "value": "ALOES_USER_EMAIL"
            },
            {
                "name": "ALOES_USER_PASSWORD",
                "type": "env",
                "value": "ALOES_USER_PASSWORD"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "icon": "font-awesome/fa-cog"
    },
    {
        "id": "333e1a0a.508c66",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesMqttPort",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ALOES_MQTT_PORT",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 360,
        "wires": [
            [
                "689ecd02.2a4574"
            ]
        ]
    },
    {
        "id": "9e64e1d4.189a08",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesMqttHost",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ALOES_MQTT_HOST",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 320,
        "wires": [
            [
                "927a36d9.8256d8"
            ]
        ]
    },
    {
        "id": "689ecd02.2a4574",
        "type": "ui_text_input",
        "z": "a0a15e45.bbc91",
        "name": "",
        "label": "MQTT Port",
        "tooltip": "",
        "group": "f05c5531.d1045",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 360,
        "wires": [
            [
                "a72e35ea.505a08"
            ]
        ]
    },
    {
        "id": "927a36d9.8256d8",
        "type": "ui_text_input",
        "z": "a0a15e45.bbc91",
        "name": "",
        "label": "MQTT Host",
        "tooltip": "",
        "group": "f05c5531.d1045",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "8b1f5be5.7afae"
            ]
        ]
    },
    {
        "id": "a72e35ea.505a08",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesMqttPort",
        "rules": [
            {
                "t": "set",
                "p": "aloesMqttPort",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "8b1f5be5.7afae",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesMqttHost",
        "rules": [
            {
                "t": "set",
                "p": "aloesMqttHost",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d732be59.6a3d5",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesUserEmail",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ALOES_USER_EMAIL",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 420,
        "wires": [
            [
                "46eacfbf.84b25"
            ]
        ]
    },
    {
        "id": "46eacfbf.84b25",
        "type": "ui_text_input",
        "z": "a0a15e45.bbc91",
        "name": "",
        "label": "Aloes Email",
        "tooltip": "use the same email address as defined on aloes",
        "group": "f05c5531.d1045",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "a41ba902.6114b8"
            ]
        ]
    },
    {
        "id": "a41ba902.6114b8",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesUserEmail",
        "rules": [
            {
                "t": "set",
                "p": "aloesUserEmail",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "37d9a645.472b62",
        "type": "debug",
        "z": "a0a15e45.bbc91",
        "name": "aloesSettingUpdate",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 840,
        "y": 640,
        "wires": []
    },
    {
        "id": "135eeb67.47f9b5",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesUserPassword",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ALOES_USER_PASSWORD",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "7dca0347.18910c"
            ]
        ]
    },
    {
        "id": "7dca0347.18910c",
        "type": "ui_text_input",
        "z": "a0a15e45.bbc91",
        "name": "",
        "label": "Aloes password",
        "tooltip": "use the same password as defined on aloes",
        "group": "f05c5531.d1045",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "",
        "x": 560,
        "y": 460,
        "wires": [
            [
                "b49903fb.6cb0d8"
            ]
        ]
    },
    {
        "id": "b49903fb.6cb0d8",
        "type": "change",
        "z": "a0a15e45.bbc91",
        "name": "aloesUserPassword",
        "rules": [
            {
                "t": "set",
                "p": "aloesUserPassword",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "581eb2da.591ef4",
        "type": "ui_button",
        "z": "a0a15e45.bbc91",
        "name": "",
        "group": "f05c5531.d1045",
        "order": 9,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 530,
        "y": 580,
        "wires": [
            [
                "edd2e0d0.b323f"
            ]
        ]
    },
    {
        "id": "b7bb752d.7bbd6",
        "type": "function",
        "z": "a0a15e45.bbc91",
        "name": "setEnv",
        "func": "try {\n    const storeType = env.get(\"store_type\") || \"memoryOnly\";\n    const processEnv = global.get(\"processEnv\", storeType);\n    if (!processEnv) throw new Error(\"process.env unavailable\");\n    const aloesHttpHost = flow.get(\"aloesHttpHost\")\n    if (aloesHttpHost) {\n        processEnv.ALOES_HTTP_HOST = aloesHttpHost;\n    }   \n    const aloesHttpPort = flow.get(\"aloesHttpPort\")\n    if (aloesHttpPort) {\n        processEnv.ALOES_HTTP_PORT = aloesHttpPort;\n    }  \n    const aloesMqttHost = flow.get(\"aloesMqttHost\")\n    if (aloesMqttHost) {\n        processEnv.ALOES_MQTT_HOST = aloesMqttHost;\n    }   \n    const aloesMqttPort = flow.get(\"aloesMqttPort\")\n    if (flow.get(\"aloesMqttPort\")) {\n        processEnv.ALOES_MQTT_PORT = aloesMqttPort;\n    }    \n    const aloesUserEmail = flow.get(\"aloesUserEmail\")\n    if (flow.get(\"aloesUserEmail\")) {\n        processEnv.ALOES_USER_EMAIL = aloesUserEmail;\n    }  \n    const aloesUserPassword = flow.get(\"aloesUserPassword\")\n    if (flow.get(\"aloesUserPassword\")) {\n        processEnv.ALOES_USER_PASSWORD = aloesUserPassword;\n    } \n    if (env.get(\"debug\")) {\n        return [msg,msg];\n    }\n    return [msg,null];\n}catch(error){\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 830,
        "y": 580,
        "wires": [
            [],
            [
                "37d9a645.472b62"
            ]
        ]
    },
    {
        "id": "edd2e0d0.b323f",
        "type": "delay",
        "z": "a0a15e45.bbc91",
        "name": "1msg/3s",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 680,
        "y": 580,
        "wires": [
            [
                "b7bb752d.7bbd6"
            ]
        ]
    },
    {
        "id": "f05c5531.d1045",
        "type": "ui_group",
        "z": "",
        "name": "aloes",
        "tab": "dfad4b78.87c12",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dfad4b78.87c12",
        "type": "ui_tab",
        "z": "",
        "name": "settings",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f59fc4ca.5ff04",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "device-out->",
        "links": [
            "e4a5ab3b.2ac458",
            "b91b7edb.8a78f8",
            "b526f804.d7793"
        ],
        "x": 795,
        "y": 900,
        "wires": [
            [
                "cee11fe0.a07ab8"
            ]
        ]
    },
    {
        "id": "c1f9a782.09bf08",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "MQTT OUT",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 850,
        "y": 820,
        "wires": []
    },
    {
        "id": "4c97035f.c4ccac",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "MQTT IN",
        "info": "",
        "x": 120,
        "y": 820,
        "wires": []
    },
    {
        "id": "81fad828.c34cc",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "1/3306/1/5850->",
        "links": [
            "1848c980.afee07",
            "5799778d.4e4ed"
        ],
        "x": 1175,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8a4853e0.bfece",
        "type": "ui_template",
        "z": "e8d476d5.a7ce28",
        "group": "eee49e5f.1079c8",
        "name": "device-status",
        "order": 1,
        "width": "10",
        "height": "1",
        "format": "<!DOCTYPE html>\n<svg viewBox=\"0 0 250 40\" id=\"{{'devices-status-'+ $id}}\">\n    <text x=\"0\" y=\"25\" style=\"{{'font-weight:700'}}\" >{{$deviceName}}</text>\n    <circle id=\"{{'devices-status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"250\" cy=\"20\" r=\"15\" fill=\"{{$statusColor}}\" ></circle>\n</svg>\n<script>\n(function(scope) {\n  scope.$watch('msg', (msg) => {\n    try{\n        scope.$statusText = \"Waiting\";\n        scope.$deviceName = \"\";\n        scope.$statusColor = \"#ff4500\";\n        if (msg && msg.device) {\n            scope.$deviceName = msg.device.name;\n            if (msg && (msg.device.status === true || msg.device.status === \"true\")) {\n                scope.$statusColor = \"#baff00\";\n                scope.$statusText = \"Ready\";\n            }\n        }\n        return msg;\n    } catch(error){\n        return error;\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 540,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "4388b2bd.3514a4",
        "type": "status",
        "z": "e8d476d5.a7ce28",
        "name": "device-rx status",
        "scope": [
            "4f8c5660.53c708",
            "cee11fe0.a07ab8"
        ],
        "x": 140,
        "y": 880,
        "wires": [
            [
                "ca288877.15d908"
            ]
        ]
    },
    {
        "id": "ca288877.15d908",
        "type": "function",
        "z": "e8d476d5.a7ce28",
        "name": "parseStatus",
        "func": "try {\n    let status = false;\n    msg.device = {};\n    msg.device.name = env.get(\"DEVICE_NAME\");\n    if (msg.status && msg.status.text && msg.status.text.startsWith(\"node-red:common.status.\")) {\n        if (msg.status.text.endsWith(\"connected\")) {\n            msg.device.status = true;\n        } else if (msg.status.text.endsWith(\"disconnected\")) {\n            msg.device.status = false;\n        }\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 880,
        "wires": [
            [
                "8a4853e0.bfece"
            ]
        ]
    },
    {
        "id": "106107c9.6da3d8",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "Init",
        "info": "",
        "x": 110,
        "y": 40,
        "wires": []
    },
    {
        "id": "5bf206a6.2c0ff",
        "type": "ui_button",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "group": "22e2fbfc.da57c4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restart app",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"requestUrl\":\"restart\",\"method\":\"GET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 810,
        "y": 440,
        "wires": [
            [
                "1d32f0d5.f0fb1f"
            ]
        ]
    },
    {
        "id": "1d32f0d5.f0fb1f",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "reboot-app",
        "links": [
            "a20d7553.175b1",
            "3eadc23f.216a36"
        ],
        "x": 1135,
        "y": 440,
        "wires": []
    },
    {
        "id": "b0b791a3.7addf8",
        "type": "subflow:a0a15e45.bbc91",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 960,
        "y": 200,
        "wires": [
            [
                "b1a8ce49.2945b8"
            ]
        ]
    },
    {
        "id": "e1c497c.95531e8",
        "type": "subflow:835fc3f4.1cbaa",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "f0da35ac.daeb1"
            ]
        ]
    },
    {
        "id": "8eb02956.a1e6c8",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "->node-red-settings-interface",
        "links": [
            "6ca82e75.36a378",
            "b3462368.a93a7",
            "905ff57f.c9308",
            "6e27de4.aa7df2"
        ],
        "x": 755,
        "y": 280,
        "wires": [
            [
                "e1c497c.95531e8"
            ]
        ]
    },
    {
        "id": "dd6e2ee4.cce85",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "->aloes-client-settings-interface",
        "links": [
            "6ca82e75.36a378",
            "b3462368.a93a7",
            "905ff57f.c9308",
            "6e27de4.aa7df2"
        ],
        "x": 755,
        "y": 200,
        "wires": [
            [
                "b0b791a3.7addf8"
            ]
        ]
    },
    {
        "id": "b75c2619.570ac8",
        "type": "subflow:a6ee8de3.9c14d8",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 960,
        "y": 360,
        "wires": [
            [
                "f5b3ce3c.ac3f2"
            ]
        ]
    },
    {
        "id": "4ca31527.e13434",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "before-save-env-vars",
        "links": [
            "f0da35ac.daeb1",
            "b1a8ce49.2945b8",
            "c499bb98.8794a8"
        ],
        "x": 755,
        "y": 360,
        "wires": [
            [
                "b75c2619.570ac8"
            ]
        ]
    },
    {
        "id": "b1a8ce49.2945b8",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "aloes-client-settings-interface->",
        "links": [
            "4ca31527.e13434"
        ],
        "x": 1135,
        "y": 200,
        "wires": []
    },
    {
        "id": "f0da35ac.daeb1",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "node-red-settings-interface->",
        "links": [
            "4ca31527.e13434"
        ],
        "x": 1135,
        "y": 280,
        "wires": []
    },
    {
        "id": "5d429192.6e6288",
        "type": "subflow:bc3f8f33.9979f",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 960,
        "y": 120,
        "wires": [
            [
                "c499bb98.8794a8"
            ]
        ]
    },
    {
        "id": "56b1090d.84567",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "->device-settings-interface",
        "links": [
            "905ff57f.c9308",
            "6e27de4.aa7df2"
        ],
        "x": 755,
        "y": 120,
        "wires": [
            [
                "5d429192.6e6288"
            ]
        ]
    },
    {
        "id": "c499bb98.8794a8",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "device-settings-interface->",
        "links": [
            "4ca31527.e13434"
        ],
        "x": 1135,
        "y": 120,
        "wires": []
    },
    {
        "id": "f5b3ce3c.ac3f2",
        "type": "debug",
        "z": "e8d476d5.a7ce28",
        "name": "saveSettings",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 1170,
        "y": 360,
        "wires": []
    },
    {
        "id": "75576c8a.6f3da4",
        "type": "inject",
        "z": "e8d476d5.a7ce28",
        "name": "bootApp",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 160,
        "y": 100,
        "wires": [
            [
                "b22c970d.e2ab88"
            ]
        ]
    },
    {
        "id": "922a9aac.870f8",
        "type": "debug",
        "z": "e8d476d5.a7ce28",
        "name": "INIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 330,
        "y": 240,
        "wires": []
    },
    {
        "id": "de3e825f.4b46b",
        "type": "subflow:7a4f0314.f6e1d4",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 260,
        "y": 160,
        "wires": [
            [
                "922a9aac.870f8",
                "6e27de4.aa7df2"
            ]
        ]
    },
    {
        "id": "b22c970d.e2ab88",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "boot-app",
        "links": [
            "41807add.c3581c",
            "6ae1e1f7.03929"
        ],
        "x": 435,
        "y": 100,
        "wires": []
    },
    {
        "id": "41807add.c3581c",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "before-state-init",
        "links": [
            "b22c970d.e2ab88"
        ],
        "x": 95,
        "y": 160,
        "wires": [
            [
                "de3e825f.4b46b"
            ]
        ]
    },
    {
        "id": "6e27de4.aa7df2",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "after-state-init",
        "links": [
            "2f687c43.036514",
            "8eb02956.a1e6c8",
            "56b1090d.84567",
            "dd6e2ee4.cce85"
        ],
        "x": 435,
        "y": 160,
        "wires": []
    },
    {
        "id": "3661979a.623bb",
        "type": "subflow:451e5dd1.047394",
        "z": "e8d476d5.a7ce28",
        "name": "nodeRedServer",
        "env": [],
        "x": 280,
        "y": 520,
        "wires": [
            [
                "b6cb2dc1.4920d8"
            ]
        ]
    },
    {
        "id": "3eadc23f.216a36",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "->node-red-http-in",
        "links": [
            "b6a4e8ff.1b1848",
            "cb3f010.077a6",
            "bd30fa14.040b68",
            "1d32f0d5.f0fb1f"
        ],
        "x": 75,
        "y": 520,
        "wires": [
            [
                "3661979a.623bb"
            ]
        ]
    },
    {
        "id": "b6cb2dc1.4920d8",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "node-red-http-in->",
        "links": [],
        "x": 435,
        "y": 520,
        "wires": []
    },
    {
        "id": "98b2da85.a13348",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "HTTP IN",
        "info": "",
        "x": 120,
        "y": 460,
        "wires": []
    },
    {
        "id": "3a38380.ff80748",
        "type": "catch",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "scope": [
            "b0b791a3.7addf8",
            "33d1fd18.730ab2",
            "276b33c2.4503c4",
            "5d429192.6e6288",
            "b75c2619.570ac8"
        ],
        "uncaught": false,
        "x": 110,
        "y": 380,
        "wires": [
            [
                "e6ff1620.495488"
            ]
        ]
    },
    {
        "id": "2aff4c48.c156c4",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "Errors",
        "info": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "e6ff1620.495488",
        "type": "debug",
        "z": "e8d476d5.a7ce28",
        "name": "ERROR",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "6a2a9bee.f8fce4",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "PI-STREAM",
        "info": "",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "4f8c5660.53c708",
        "type": "subflow:8eeb39ef.4880a",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [],
        "x": 120,
        "y": 960,
        "wires": [
            [],
            [
                "ca194be6.a2bcf"
            ]
        ]
    },
    {
        "id": "cee11fe0.a07ab8",
        "type": "subflow:fb539252.4e5408",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            }
        ],
        "x": 960,
        "y": 900,
        "wires": []
    },
    {
        "id": "71952995.6fe58",
        "type": "ui_button",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "group": "22e2fbfc.da57c4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Shutdown device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "sudo shutdown -h now",
        "payloadType": "str",
        "topic": "",
        "x": 830,
        "y": 480,
        "wires": [
            [
                "c2671bee.50dcd"
            ]
        ]
    },
    {
        "id": "d40d25.f5d7ead8",
        "type": "ui_button",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "group": "22e2fbfc.da57c4",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Restart device",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "sudo reboot",
        "payloadType": "str",
        "topic": "",
        "x": 820,
        "y": 520,
        "wires": [
            [
                "c2671bee.50dcd"
            ]
        ]
    },
    {
        "id": "c2671bee.50dcd",
        "type": "exec",
        "z": "e8d476d5.a7ce28",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1110,
        "y": 500,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7c5b7955.39c3d8",
        "type": "ui_ui_control",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "x": 360,
        "y": 680,
        "wires": [
            [
                "65c94242.a0cdbc"
            ]
        ]
    },
    {
        "id": "76c859e9.3f98d",
        "type": "inject",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "topic": "",
        "payload": "{\"tab\":\"home\",\"hide\":[\"settings\"]}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 680,
        "wires": [
            [
                "7c5b7955.39c3d8"
            ]
        ]
    },
    {
        "id": "65c94242.a0cdbc",
        "type": "subflow:5d795c24.32568c",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "x": 560,
        "y": 680,
        "wires": []
    },
    {
        "id": "a2924e85.705148",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "UI ROUTER",
        "info": "",
        "x": 130,
        "y": 620,
        "wires": []
    },
    {
        "id": "acee3bbc.73fde",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "ADMIN INTERFACES",
        "info": "",
        "x": 840,
        "y": 40,
        "wires": []
    },
    {
        "id": "b79e269d.2050b",
        "type": "switch",
        "z": "e8d476d5.a7ce28",
        "name": "5850-sensorId",
        "property": "parts[3]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1000,
        "y": 1060,
        "wires": [
            [
                "81fad828.c34cc"
            ],
            [
                "fd6a7940.baee3"
            ],
            [
                "ca9ae063.44668"
            ],
            [
                "bdb59060.25fdf"
            ]
        ]
    },
    {
        "id": "45a5e7cd.47b5e",
        "type": "switch",
        "z": "e8d476d5.a7ce28",
        "name": "3306-resourceId",
        "property": "parts[4]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5850",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5851",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 1060,
        "wires": [
            [
                "b79e269d.2050b"
            ],
            [
                "1e4f1dc.9d2cae2"
            ]
        ]
    },
    {
        "id": "8cf21d7b.21cdd",
        "type": "switch",
        "z": "e8d476d5.a7ce28",
        "name": "POST-objectId",
        "property": "parts[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3306",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3339",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3341",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3349",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 520,
        "y": 1080,
        "wires": [
            [
                "45a5e7cd.47b5e"
            ],
            [],
            [],
            [
                "f8ff2ced.449408"
            ]
        ]
    },
    {
        "id": "ca194be6.a2bcf",
        "type": "switch",
        "z": "e8d476d5.a7ce28",
        "name": "Method",
        "property": "parts[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 1080,
        "wires": [
            [
                "8cf21d7b.21cdd"
            ],
            [],
            []
        ]
    },
    {
        "id": "85b8ec70.531f78",
        "type": "inject",
        "z": "e8d476d5.a7ce28",
        "name": "HEAD/3306/1/5850",
        "topic": "0/3306/1/5850",
        "payload": "Digital_input",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 240,
        "y": 1600,
        "wires": [
            [
                "b91b7edb.8a78f8"
            ]
        ]
    },
    {
        "id": "1f4a8a.9004fd76",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "Sensors presentations",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 160,
        "y": 1520,
        "wires": []
    },
    {
        "id": "b91b7edb.8a78f8",
        "type": "link out",
        "z": "e8d476d5.a7ce28",
        "name": "audio-player-out-presentations",
        "links": [
            "f59fc4ca.5ff04"
        ],
        "x": 495,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1848c980.afee07",
        "type": "link in",
        "z": "e8d476d5.a7ce28",
        "name": "->screen-state",
        "links": [
            "81fad828.c34cc"
        ],
        "x": 75,
        "y": 2120,
        "wires": [
            [
                "696babad.f4e2ac"
            ]
        ]
    },
    {
        "id": "696babad.f4e2ac",
        "type": "subflow:c3e1e518.dae03",
        "z": "e8d476d5.a7ce28",
        "name": "",
        "env": [
            {
                "name": "resource_id",
                "type": "str",
                "value": "5850"
            }
        ],
        "x": 190,
        "y": 2120,
        "wires": [
            [
                "db619123.01cf7"
            ]
        ]
    },
    {
        "id": "e5e21f23.2a6b28",
        "type": "comment",
        "z": "e8d476d5.a7ce28",
        "name": "Interface",
        "info": "",
        "x": 120,
        "y": 1980,
        "wires": []
    },
    {
        "id": "db619123.01cf7",
        "type": "ui_switch",
        "z": "e8d476d5.a7ce28",
        "name": "POST/3306/1/5850",
        "label": "ScreenState",
        "tooltip": "",
        "group": "eee49e5f.1079c8",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "1/3306/1/5850",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 390,
        "y": 2120,
        "wires": [
            [
                "c7dcefcf.9d692"
            ]
        ]
    },
    {
        "id": "eee49e5f.1079c8",
        "type": "ui_group",
        "z": "",
        "name": "Device-interfaces",
        "tab": "339a5d01.bc7d92",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "22e2fbfc.da57c4",
        "type": "ui_group",
        "z": "",
        "name": "commands",
        "tab": "dfad4b78.87c12",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "339a5d01.bc7d92",
        "type": "ui_tab",
        "z": "",
        "name": "home",
        "icon": "fa-fire",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
