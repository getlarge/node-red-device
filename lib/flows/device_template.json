[
    {
        "id": "ae9ccaa4.46eba8",
        "type": "tab",
        "label": "Device flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aed39a0a.3b8fc8",
        "type": "subflow",
        "name": "updateSensor",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 220,
                "wires": [
                    {
                        "id": "a51a8dc7.b1584"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 200,
                "wires": [
                    {
                        "id": "a51a8dc7.b1584",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            },
            {
                "name": "device_name",
                "type": "str",
                "value": ""
            },
            {
                "name": "store_type",
                "type": "str",
                "value": "memory"
            }
        ]
    },
    {
        "id": "9faf7e92.611018",
        "type": "subflow",
        "name": "setState",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 100,
                "wires": [
                    {
                        "id": "f8b680a.57e4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 480,
                "y": 100,
                "wires": [
                    {
                        "id": "f8b680a.57e4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "DEVICE_NAME",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_TYPE",
                "type": "env",
                "value": "DEVICE_TYPE"
            },
            {
                "name": "DEVICE_IN_PREFIX",
                "type": "env",
                "value": "DEVICE_IN_PREFIX"
            },
            {
                "name": "DEVICE_OUT_PREFIX",
                "type": "env",
                "value": "DEVICE_OUT_PREFIX"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ]
    },
    {
        "id": "834192d3.07a2e8",
        "type": "subflow",
        "name": "envConfig",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 760,
                "y": 200,
                "wires": [
                    {
                        "id": "346fa75f.3f35d8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "747afc9e.ba585c",
        "type": "subflow",
        "name": "Device-in",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 720,
                "y": 240,
                "wires": [
                    {
                        "id": "d893b77.b4f9848",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY ",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "7ffa8f69.e9dd5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "d204960a.929be8",
        "type": "subflow",
        "name": "Device-out",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 260,
                "wires": [
                    {
                        "id": "edb0fe1e.0180e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "ALOES_MQTT_HOST",
                "type": "env",
                "value": "ALOES_MQTT_HOST"
            },
            {
                "name": "ALOES_MQTT_PORT",
                "type": "env",
                "value": "ALOES_MQTT_PORT"
            },
            {
                "name": "DEVICE_DEVEUI",
                "type": "env",
                "value": "DEVICE_DEVEUI"
            },
            {
                "name": "DEVICE_ID",
                "type": "env",
                "value": "DEVICE_ID"
            },
            {
                "name": "DEVICE_APPKEY",
                "type": "env",
                "value": "DEVICE_APPKEY"
            },
            {
                "name": "DEVICE_IN_TOPIC",
                "type": "env",
                "value": "DEVICE_IN_TOPIC"
            },
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            },
            {
                "name": "NODE_RED_STORE_TYPE",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "icon": "node-red/feed.png",
        "status": {
            "x": 460,
            "y": 140,
            "wires": [
                {
                    "id": "78a1a9d8.02885",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "891a3580.c2cb48",
        "type": "subflow",
        "name": "parsePayload",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": []
    },
    {
        "id": "107af25b.e6bb4e",
        "type": "mqtt-broker",
        "z": "",
        "name": "Aloes-Client",
        "broker": "${ALOES_MQTT_HOST}",
        "port": "${ALOES_MQTT_PORT}",
        "clientid": "${DEVICE_DEVEUI}",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "acc87b41.ff53a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#528fa2",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#528fa2",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#528fa2",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#81b1bf",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#528fa2",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Aloes-device",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "92944a15.b43e3",
        "type": "ui_group",
        "z": "",
        "name": "Device",
        "tab": "7c3f862.d119478",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c823ad2a.7ac8b",
        "type": "ui_group",
        "z": "",
        "name": "MQTT",
        "tab": "7c3f862.d119478",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "37eee9f8.54f026",
        "type": "ui_group",
        "z": "",
        "name": "Server",
        "tab": "7c3f862.d119478",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c3f862.d119478",
        "type": "ui_tab",
        "z": "",
        "name": "Settings",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "7d08bae5.b5de34",
        "type": "ui_group",
        "z": "",
        "name": "Device-interfaces",
        "tab": "e6928bec.147798",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e6928bec.147798",
        "type": "ui_tab",
        "z": "",
        "name": "Controls",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e2ff5818.655c38",
        "type": "comment",
        "z": "ae9ccaa4.46eba8",
        "name": "Sensors presentations",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 140,
        "y": 380,
        "wires": []
    },
    {
        "id": "5960aec7.de91a8",
        "type": "inject",
        "z": "ae9ccaa4.46eba8",
        "name": "HEAD/3306/1/5850",
        "topic": "node-red-device-out/0/3306/1/5850",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 220,
        "y": 460,
        "wires": [
            [
                "4553184c.4eca38"
            ]
        ]
    },
    {
        "id": "899c060.aff04f8",
        "type": "inject",
        "z": "ae9ccaa4.46eba8",
        "name": "HEAD/3306/2/5850",
        "topic": "node-red-device-out/0/3306/2/5850",
        "payload": "1",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1.1",
        "x": 220,
        "y": 500,
        "wires": [
            [
                "4553184c.4eca38"
            ]
        ]
    },
    {
        "id": "e3dd4f87.151068",
        "type": "link in",
        "z": "ae9ccaa4.46eba8",
        "name": "device-out->",
        "links": [
            "410de8a8.f5785",
            "4553184c.4eca38"
        ],
        "x": 775,
        "y": 500,
        "wires": [
            [
                "ca62c023.2125e8"
            ]
        ]
    },
    {
        "id": "a623a768.5d5458",
        "type": "comment",
        "z": "ae9ccaa4.46eba8",
        "name": "Interface",
        "info": "",
        "x": 140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "3030c5a6.4bca8a",
        "type": "inject",
        "z": "ae9ccaa4.46eba8",
        "name": "bootApp",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "b98421b4.2e1f28",
                "d6f9639b.c4fe78"
            ]
        ]
    },
    {
        "id": "b4823154.2dd388",
        "type": "debug",
        "z": "ae9ccaa4.46eba8",
        "name": "INIT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 490,
        "y": 100,
        "wires": []
    },
    {
        "id": "4bf3fe98.989a38",
        "type": "comment",
        "z": "ae9ccaa4.46eba8",
        "name": "Init",
        "info": "",
        "x": 90,
        "y": 40,
        "wires": []
    },
    {
        "id": "4553184c.4eca38",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "audio-player-out-presentations",
        "links": [
            "e3dd4f87.151068"
        ],
        "x": 555,
        "y": 520,
        "wires": []
    },
    {
        "id": "53fb9f78.9d96d",
        "type": "comment",
        "z": "ae9ccaa4.46eba8",
        "name": "MQTT OUT",
        "info": "## Protocol\n\n+prefixedDevEui = devEui+inPrefix\n+method = 0 (\"HEAD\") | 1 (\"POST\") | 2 (\"GET\") | 3 (\"Internal\") | 4 (\"STREAM\")\n\n+prefixedDevEui/+method/+omaObjectId/+nativeSensorId/omaResourceId",
        "x": 770,
        "y": 380,
        "wires": []
    },
    {
        "id": "a51a8dc7.b1584",
        "type": "function",
        "z": "aed39a0a.3b8fc8",
        "name": "updateInstance",
        "func": "try {\n    if (msg.parts && msg.parts !== null) {\n        const storeType = env.get(\"store_type\") || \"memory\";\n        //  console.log('updateInstance', deviceName);\n        const method = msg.parts[1];\n        const objectId = msg.parts[2];\n        const sensorId = msg.parts[3];\n        const resourceId = msg.parts[4];\n        let sensor = global.get(`sensor-${sensorId}`, storeType);\n        if (!method || !objectId || !sensorId || !resourceId) {\n            return [null,new Error(\"missing params\")]\n        }\n        if (!sensor || sensor === null) {\n            sensor = {};\n        }\n        if (!sensor.resources) {\n            sensor.resources = {};\n        }\n        sensor.resources[resourceId] = msg.payload;\n        sensor.type = Number(objectId);\n        sensor.resource = Number(resourceId);\n        sensor.value = msg.payload;\n        global.set(`sensor-${sensorId}`, sensor, storeType, (err) => {\n            if(err) throw err;\n        });\n        msg.payload = sensor;\n        if (env.get(\"debug\")) {\n            return [msg, msg];\n        }\n        return [msg, null];\n    }\n    throw new Error(\"No msg.parts\")\n}catch(error){\n    //  console.log('updateInstance : error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 400,
        "y": 220,
        "wires": [
            [],
            [
                "b440eb85.1e783"
            ]
        ]
    },
    {
        "id": "b440eb85.1e783",
        "type": "debug",
        "z": "aed39a0a.3b8fc8",
        "name": "sensorUpdated",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 460,
        "y": 280,
        "wires": []
    },
    {
        "id": "700ef8f1.3af46",
        "type": "debug",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 970,
        "y": 100,
        "wires": []
    },
    {
        "id": "ec1b034e.993fd8",
        "type": "function",
        "z": "ae9ccaa4.46eba8",
        "name": "setEnv",
        "func": "try {\n    const processEnv = global.get(\"processEnv\");\n    if (!processEnv) throw new Error(\"process.env not available\");\n    // DEVICE CONFIG\n    if (msg.payload.devEui) {\n        processEnv.DEVICE_DEVEUI = msg.payload.devEui;\n    } \n    if (msg.payload.deviceId) {\n        processEnv.DEVICE_ID = msg.payload.deviceId;\n    }\n    if (msg.payload.appKey) {\n        processEnv.DEVICE_APPKEY = msg.payload.appKey;\n    }\n    if (msg.payload.type) {\n        processEnv.DEVICE_TYPE = msg.payload.type;\n    }\n    if (msg.payload.name) {\n        processEnv.DEVICE_NAME = msg.payload.name;\n    }\n    // ALOES - MQTT CONFIG\n    if (msg.payload.inPrefix) {\n        processEnv.DEVICE_IN_PREFIX = msg.payload.inPrefix;\n    }\n    if (msg.payload.outPrefix) {\n        processEnv.DEVICE_OUT_PREFIX = msg.payload.outPrefix;\n    }\n    if (msg.payload.inTopic) {\n        processEnv.DEVICE_IN_TOPIC = msg.payload.inTopic;\n    }\n    if (msg.payload.aloesMqttHost) {\n        processEnv.ALOES_MQTT_HOST = msg.payload.aloesMqttHost;\n    }\n    if (msg.payload.aloesMqttPort) {\n        processEnv.ALOES_MQTT_PORT = msg.payload.aloesMqttPort;\n    }\n    \n    // CREDENTIALS FOR ALOES - NODE-RED\n    if (msg.payload.aloesUserEmail) {\n        processEnv.ALOES_USER_EMAIL = msg.payload.aloesUserEmail;\n    }\n    if (msg.payload.aloesUserPassword) {\n        processEnv.ALOES_USER_PASSWORD = msg.payload.aloesUserPassword;\n    }\n    \n    // NODE-RED CONFIG\n    if (msg.payload.nodeRedUrl) {\n        processEnv.NODE_RED_URL = msg.payload.nodeRedUrl;\n    }   \n    if (msg.payload.nodeRedPort) {\n        processEnv.NODE_RED_PORT = msg.payload.nodeRedPort;\n    }\n    if (msg.payload.nodeRedHost) {\n        processEnv.NODE_RED_HOST = msg.payload.nodeRedHost;\n    }    \n    if (msg.payload.nodeRedAdminRoot) {\n        processEnv.NODE_RED_ADMIN_ROOT = msg.payload.nodeRedAdminRoot;\n    } \n    if (msg.payload.nodeRedApiRoot) {\n        processEnv.NODE_RED_API_ROOT = msg.payload.nodeRedApiRoot;\n    }  \n    if (processEnv.NODE_ENV === \"development\") {\n        msg.filename = \"./deploy/.env_dev\";\n    } else if (processEnv.NODE_ENV === \"local\") {\n        msg.filename = \"./deploy/.env_local\";\n    } else {\n        //  msg.filename = \"./.env\";\n        msg.filename = \"./deploy/.env_dev\";\n    }\n    msg.payload = `NODE_RED_URL=${env.get(\"NODE_RED_URL\")}\nNODE_RED_HOST=${env.get(\"NODE_RED_HOST\")}\nNODE_RED_PORT=${env.get(\"NODE_RED_PORT\")}\nNODE_RED_ADMIN_ROOT=${env.get(\"NODE_RED_ADMIN_ROOT\")}\nNODE_RED_API_ROOT=${env.get(\"NODE_RED_API_ROOT\")}\nNODE_RED_UI_PATH=${env.get(\"NODE_RED_UI_PATH\")}\nNODE_RED_USER_DIR=${env.get(\"NODE_RED_USER_DIR\")}\nNODE_RED_STORE_TYPE=${env.get(\"NODE_RED_STORE_TYPE\")}\nALOES_MQTT_HOST=${env.get(\"ALOES_MQTT_HOST\")}\nALOES_MQTT_PORT=${env.get(\"ALOES_MQTT_PORT\")}\nALOES_USER_EMAIL=${env.get(\"ALOES_USER_EMAIL\")}\nALOES_USER_PASSWORD=${env.get(\"ALOES_USER_PASSWORD\")}\nDEVICE_DEVEUI=${env.get(\"DEVICE_DEVEUI\")}\nDEVICE_ID=${env.get(\"DEVICE_ID\")}\nDEVICE_APPKEY=${env.get(\"DEVICE_APPKEY\")}\nDEVICE_TYPE=${env.get(\"DEVICE_TYPE\")}\nDEVICE_NAME=${env.get(\"DEVICE_NAME\")}\nDEVICE_IN_PREFIX=${env.get(\"DEVICE_IN_PREFIX\")}\nDEVICE_OUT_PREFIX=${env.get(\"DEVICE_OUT_PREFIX\")}\nDEVICE_IN_TOPIC=${env.get(\"DEVICE_IN_TOPIC\")}\nGIT_REPO_SSH_URL=${env.get(\"GIT_REPO_SSH_URL\")}`;\n    console.log(\"env\", msg.payload)\n    return msg;\n}catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f8b680a.57e4",
        "type": "function",
        "z": "9faf7e92.611018",
        "name": "setState",
        "func": "try {\n    const storeType = env.get(\"NODE_RED_STORE_TYPE\") || \"memory\";\n    const deviceName = env.get(\"DEVICE_NAME\") || \"node-red-device\";\n    let device; \n    global.get(deviceName, storeType, (err, res) => {\n        if (err) throw err;\n        device = res;\n    });\n    if (!device || device === null) {\n        device = {\n            devEui : env.get(\"DEVICE_DEVEUI\"),\n            id : env.get(\"DEVICE_ID\"),\n            appKey: env.get(\"DEVICE_APPKEY\"),\n            type : env.get(\"DEVICE_TYPE\") || \"node\",\n            name : deviceName,\n            inPrefix: env.get(\"DEVICE_IN_PREFIX\") ||\"-in\",\n            outPrefix: env.get(\"DEVICE_OUT_PREFIX\") || \"-out\"\n        };    \n    } else {\n        device.devEui = env.get(\"DEVICE_DEVEUI\");\n        device.id = env.get(\"DEVICE_ID\");\n        device.appKey = env.get(\"DEVICE_APPKEY\");\n        device.type = env.get(\"DEVICE_TYPE\") || \"node\";\n        device.name = deviceName;\n        device.inPrefix = env.get(\"DEVICE_IN_PREFIX\") || \"-in\";\n        device.outPrefix = env.get(\"DEVICE_OUT_PREFIX\") || \"-out\";\n    }\n    if (device && device.devEui && device.name) {\n       global.set(device.name, device, storeType, (err) => {\n            if(err) throw err;\n        }); \n    }\n    msg.payload = device;\n    return msg;  \n} catch(error) {\n    console.log(\"setState: error\", error);\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d6f9639b.c4fe78",
        "type": "subflow:9faf7e92.611018",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "env": [],
        "x": 300,
        "y": 100,
        "wires": [
            [
                "b4823154.2dd388",
                "76367748.cac45"
            ]
        ]
    },
    {
        "id": "b98421b4.2e1f28",
        "type": "file in",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "filename": "./.env",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "ec6dbb55.e6235"
            ]
        ]
    },
    {
        "id": "ec6dbb55.e6235",
        "type": "debug",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 200,
        "wires": []
    },
    {
        "id": "fd2c66e8.f05e58",
        "type": "function",
        "z": "834192d3.07a2e8",
        "name": "setEnv",
        "func": "try {\n    const processEnv = global.get(\"processEnv\");\n    if (!processEnv) throw new Error(\"process.env not available\");\n    // DEVICE CONFIG\n    if (msg.payload.devEui) {\n        processEnv.DEVICE_DEVEUI = msg.payload.devEui;\n    } \n    if (msg.payload.deviceId) {\n        processEnv.DEVICE_ID = msg.payload.deviceId;\n    }\n    if (msg.payload.appKey) {\n        processEnv.DEVICE_APPKEY = msg.payload.appKey;\n    }\n    if (msg.payload.deviceType) {\n        processEnv.DEVICE_TYPE = msg.payload.deviceType;\n    }\n    if (msg.payload.deviceName) {\n        processEnv.DEVICE_NAME = msg.payload.deviceName;\n    }\n    // ALOES - MQTT CONFIG\n    if (msg.payload.inPrefix) {\n        processEnv.DEVICE_IN_PREFIX = msg.payload.inPrefix;\n    }\n    if (msg.payload.outPrefix) {\n        processEnv.DEVICE_OUT_PREFIX = msg.payload.outPrefix;\n    }\n    if (msg.payload.inTopic) {\n        processEnv.DEVICE_IN_TOPIC = msg.payload.inTopic;\n    }\n    if (msg.payload.aloesMqttHost) {\n        processEnv.ALOES_MQTT_HOST = msg.payload.aloesMqttHost;\n    }\n    if (msg.payload.aloesMqttPort) {\n        processEnv.ALOES_MQTT_PORT = msg.payload.aloesMqttPort;\n    }\n    \n    // CREDENTIALS FOR ALOES - NODE-RED\n    if (msg.payload.aloesUserEmail) {\n        processEnv.ALOES_USER_EMAIL = msg.payload.aloesUserEmail;\n    }\n    if (msg.payload.aloesUserPassword) {\n        processEnv.ALOES_USER_PASSWORD = msg.payload.aloesUserPassword;\n    }\n    \n    // NODE-RED CONFIG\n    if (msg.payload.nodeRedUrl) {\n        processEnv.NODE_RED_URL = msg.payload.nodeRedUrl;\n    }   \n    if (msg.payload.nodeRedPort) {\n        processEnv.NODE_RED_PORT = msg.payload.nodeRedPort;\n    }\n    if (msg.payload.nodeRedHost) {\n        processEnv.NODE_RED_HOST = msg.payload.nodeRedHost;\n    }    \n    if (msg.payload.nodeRedAdminRoot) {\n        processEnv.NODE_RED_ADMIN_ROOT = msg.payload.nodeRedAdminRoot;\n    } \n    if (msg.payload.nodeRedApiRoot) {\n        processEnv.NODE_RED_API_ROOT = msg.payload.nodeRedApiRoot;\n    }  \n    if (processEnv.NODE_ENV === \"development\") {\n        msg.filename = \"./deploy/.env_dev\";\n    } else if (processEnv.NODE_ENV === \"local\") {\n        msg.filename = \"./deploy/.env_local\";\n    } else {\n        //  msg.filename = \"./.env\";\n        msg.filename = \"./deploy/.env_dev\";\n    }\n    msg.payload = `NODE_RED_URL=${processEnv.NODE_RED_URL}\nNODE_RED_HOST=${processEnv.NODE_RED_HOST}\nNODE_RED_PORT=${processEnv.NODE_RED_PORT}\nNODE_RED_ADMIN_ROOT=${processEnv.NODE_RED_ADMIN_ROOT}\nNODE_RED_API_ROOT=${processEnv.NODE_RED_API_ROOT}\nNODE_RED_UI_PATH=${processEnv.NODE_RED_UI_PATH}\nNODE_RED_USER_DIR=${processEnvNODE_RED_USER_DIR}\nNODE_RED_STORE_TYPE=${processEnv.NODE_RED_STORE_TYPE}\nALOES_MQTT_HOST=${processEnv.ALOES_MQTT_HOST}\nALOES_MQTT_PORT=${processEnv.ALOES_MQTT_PORT}\nALOES_USER_EMAIL=${processEnv.ALOES_USER_EMAIL}\nALOES_USER_PASSWORD=${processEnv.ALOES_USER_PASSWORD}\nDEVICE_DEVEUI=${processEnv.DEVICE_DEVEUI}\nDEVICE_ID=${processEnv.DEVICE_ID}\nDEVICE_APPKEY=${processEnv.DEVICE_APPKEY}\nDEVICE_TYPE=${processEnv.DEVICE_TYPE}\nDEVICE_NAME=${processEnv.DEVICE_NAME}\nDEVICE_IN_PREFIX=${processEnv.DEVICE_IN_PREFIX}\nDEVICE_OUT_PREFIX=${processEnv.DEVICE_OUT_PREFIX}\nDEVICE_IN_TOPIC=${processEnv.DEVICE_IN_TOPIC}\nGIT_REPO_SSH_URL=${processEnv.GIT_REPO_SSH_URL}`;\n    console.log(\"env\", msg.payload)\n    return msg;\n}catch(error){\n    return error;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "346fa75f.3f35d8"
            ]
        ]
    },
    {
        "id": "346fa75f.3f35d8",
        "type": "file",
        "z": "834192d3.07a2e8",
        "name": "env file",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 600,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cc4bb07f.71249",
        "type": "ui_form",
        "z": "834192d3.07a2e8",
        "name": "",
        "label": "Instance config :",
        "group": "92944a15.b43e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "devEui",
                "value": "devEui",
                "type": "text",
                "required": false
            },
            {
                "label": "deviceId",
                "value": "deviceId",
                "type": "text",
                "required": false
            },
            {
                "label": "name",
                "value": "deviceName",
                "type": "text",
                "required": false
            },
            {
                "label": "type",
                "value": "deviceType",
                "type": "text",
                "required": false
            },
            {
                "label": "appKey",
                "value": "appKey",
                "type": "text",
                "required": false
            }
        ],
        "formValue": {
            "devEui": "",
            "deviceId": "",
            "deviceName": "",
            "deviceType": "",
            "appKey": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "fd2c66e8.f05e58"
            ]
        ]
    },
    {
        "id": "491707e9.cb593",
        "type": "ui_form",
        "z": "834192d3.07a2e8",
        "name": "",
        "label": "Aloes config :",
        "group": "c823ad2a.7ac8b",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "host",
                "value": "aloesMqttHost",
                "type": "text",
                "required": false
            },
            {
                "label": "port",
                "value": "aloesMqttPort",
                "type": "text",
                "required": false
            },
            {
                "label": "inPrefix",
                "value": "inPrefix",
                "type": "text",
                "required": false
            },
            {
                "label": "outPrefix",
                "value": "outPrefix",
                "type": "text",
                "required": false
            },
            {
                "label": "inTopic",
                "value": "inTopic",
                "type": "text",
                "required": false
            }
        ],
        "formValue": {
            "aloesMqttHost": "",
            "aloesMqttPort": "",
            "inPrefix": "",
            "outPrefix": "",
            "inTopic": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "fd2c66e8.f05e58"
            ]
        ]
    },
    {
        "id": "bb3a365a.05d0b8",
        "type": "ui_form",
        "z": "834192d3.07a2e8",
        "name": "",
        "label": "Node-red config :",
        "group": "37eee9f8.54f026",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Admin root",
                "value": "nodeRedAdminRoot",
                "type": "text",
                "required": false
            },
            {
                "label": "httpRoot",
                "value": "nodeRedApiRoot",
                "type": "text",
                "required": false
            },
            {
                "label": "host",
                "value": "nodeRedHost",
                "type": "text",
                "required": false
            },
            {
                "label": "port",
                "value": "nodeRedPort",
                "type": "text",
                "required": false
            },
            {
                "label": "URL",
                "value": "nodeRedUrl",
                "type": "text",
                "required": false
            }
        ],
        "formValue": {
            "nodeRedAdminRoot": "",
            "nodeRedApiRoot": "",
            "nodeRedHost": "",
            "nodeRedPort": "",
            "nodeRedUrl": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 280,
        "y": 260,
        "wires": [
            [
                "fd2c66e8.f05e58"
            ]
        ]
    },
    {
        "id": "460ac585.a9ddec",
        "type": "subflow:834192d3.07a2e8",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "env": [],
        "x": 780,
        "y": 100,
        "wires": [
            [
                "700ef8f1.3af46"
            ]
        ]
    },
    {
        "id": "c3457eb9.a747d8",
        "type": "function",
        "z": "747afc9e.ba585c",
        "name": "topicSplit",
        "func": "msg.parts = msg.topic.split(\"/\");\nif (env.get(\"debug\")) {\n    return [msg,msg];\n}\nreturn [msg,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 360,
        "y": 280,
        "wires": [
            [
                "d893b77.b4f9848"
            ],
            [
                "c8771ec4.e94a4"
            ]
        ]
    },
    {
        "id": "c8771ec4.e94a4",
        "type": "debug",
        "z": "747afc9e.ba585c",
        "name": "Device-rx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 460,
        "y": 360,
        "wires": []
    },
    {
        "id": "366d919e.1a7ade",
        "type": "mqtt in",
        "z": "747afc9e.ba585c",
        "name": "Aloes-out",
        "topic": "${DEVICE_IN_TOPIC}",
        "qos": "0",
        "datatype": "auto",
        "broker": "107af25b.e6bb4e",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "c3457eb9.a747d8"
            ]
        ]
    },
    {
        "id": "d893b77.b4f9848",
        "type": "subflow:aed39a0a.3b8fc8",
        "z": "747afc9e.ba585c",
        "name": "",
        "env": [
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "x": 540,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "7ffa8f69.e9dd5",
        "type": "status",
        "z": "747afc9e.ba585c",
        "name": "",
        "scope": [
            "366d919e.1a7ade"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "20719b9e.b0c8b4",
        "type": "mqtt out",
        "z": "d204960a.929be8",
        "name": "Aloes-in",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "107af25b.e6bb4e",
        "x": 580,
        "y": 220,
        "wires": []
    },
    {
        "id": "23254726.d55d08",
        "type": "debug",
        "z": "d204960a.929be8",
        "name": "Device-tx",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 320,
        "y": 360,
        "wires": []
    },
    {
        "id": "edb0fe1e.0180e",
        "type": "function",
        "z": "d204960a.929be8",
        "name": "topicParser",
        "func": "try {\n    if (msg.topic && msg.topic !== null) {\n        const t = msg.topic.split(\"/\");\n        //  const dNameParts = t[0].split(\"-\");\n        //  const l = dNameParts.length;\n        //  const prefix = `-${dNameParts.slice(l-1,l)}`;\n        const storeType = env.get(\"NODE_RED_STORE_TYPE\") || \"memory\";\n        const deviceName = env.get(\"DEVICE_NAME\");\n        console.log('deviceName', deviceName);\n        if (!deviceName) throw new Error(\"no name found\");\n        const device = global.get(deviceName, storeType);\n        if (!device) throw new Error(\"no device found\");\n        //  t[0] = `${device.devEui}${device.outPrefix}`;\n        //  msg.topic = t.join(\"/\");\n        const method = t[0];\n        const objectId = t[1];\n        const sensorId = t[2];\n        const resourceId = t[3];\n        msg.topic = `${device.devEui}${device.outPrefix}/${method}/${objectId}/${sensorId}/${resourceId}`;\n        msg.parts = t;\n        //  console.log('topic', msg.topic);\n        if (env.get(\"debug\")){\n            return [msg,msg];\n        }\n        return [msg,null];  \n    }\n    throw new Error(\"No msg.topic\")\n}catch(error){\n    //  console.log('error', error);\n    return error;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "20719b9e.b0c8b4",
                "dada4a19.6c7998"
            ],
            [
                "23254726.d55d08"
            ]
        ]
    },
    {
        "id": "dada4a19.6c7998",
        "type": "subflow:aed39a0a.3b8fc8",
        "z": "d204960a.929be8",
        "name": "",
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "false"
            },
            {
                "name": "device_name",
                "type": "env",
                "value": "DEVICE_NAME"
            },
            {
                "name": "store_type",
                "type": "env",
                "value": "NODE_RED_STORE_TYPE"
            }
        ],
        "x": 580,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "78a1a9d8.02885",
        "type": "status",
        "z": "d204960a.929be8",
        "name": "",
        "scope": [
            "20719b9e.b0c8b4"
        ],
        "x": 220,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "ca62c023.2125e8",
        "type": "subflow:d204960a.929be8",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "env": [
            {
                "name": "debug",
                "type": "bool",
                "value": "true"
            }
        ],
        "x": 940,
        "y": 500,
        "wires": []
    },
    {
        "id": "e2e2de14.fce488",
        "type": "ui_template",
        "z": "ae9ccaa4.46eba8",
        "group": "7d08bae5.b5de34",
        "name": "device-status-icon",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<svg width=\"100%\" height=\"100%\" id=\"{{'device-status-'+ $id}}\">\n    <circle id=\"{{'status-icon-'+$id}}\" x=\"0\" y=\"0\" cx=\"20\" cy=\"20\" r=\"15\" fill=\"{{msg.status.fill || 'red'}}\" ></circle>\n</svg>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 450,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "18ef1722.856e09",
        "type": "status",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "scope": [
            "184ab8ff.3219df"
        ],
        "x": 140,
        "y": 1460,
        "wires": [
            [
                "e2e2de14.fce488",
                "3f561dbc.296f62"
            ]
        ]
    },
    {
        "id": "76367748.cac45",
        "type": "ui_text",
        "z": "ae9ccaa4.46eba8",
        "group": "7d08bae5.b5de34",
        "order": 1,
        "width": "5",
        "height": "1",
        "name": "deviceName",
        "label": "",
        "format": "{{msg.payload.name}}",
        "layout": "row-left",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "3f561dbc.296f62",
        "type": "debug",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 1400,
        "wires": []
    },
    {
        "id": "bc74c052.b2b2c8",
        "type": "ui_switch",
        "z": "ae9ccaa4.46eba8",
        "name": "POST/3306/1/5850",
        "label": "switch",
        "tooltip": "",
        "group": "7d08bae5.b5de34",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "1/3306/1/5850",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 480,
        "y": 1620,
        "wires": [
            [
                "410de8a8.f5785"
            ]
        ]
    },
    {
        "id": "f408cca6.5d2ec8",
        "type": "ui_slider",
        "z": "ae9ccaa4.46eba8",
        "name": "POST/3306/1/5851",
        "label": "slider",
        "tooltip": "update 3306/1/5851",
        "group": "7d08bae5.b5de34",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "end",
        "topic": "1/3306/1/5851",
        "min": 0,
        "max": "100",
        "step": 1,
        "x": 470,
        "y": 1680,
        "wires": [
            [
                "410de8a8.f5785"
            ]
        ]
    },
    {
        "id": "76587dda.844ecc",
        "type": "link in",
        "z": "ae9ccaa4.46eba8",
        "name": "SWITCH/1/3306/1/5850",
        "links": [
            "290014a9.88dcc4",
            "9e6b9922.c91d9"
        ],
        "x": 255,
        "y": 1620,
        "wires": [
            [
                "bc74c052.b2b2c8"
            ]
        ]
    },
    {
        "id": "410de8a8.f5785",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "interfaces->",
        "links": [
            "e3dd4f87.151068"
        ],
        "x": 755,
        "y": 1660,
        "wires": []
    },
    {
        "id": "fc4c2500.9728c",
        "type": "link in",
        "z": "ae9ccaa4.46eba8",
        "name": "SLIDER/1/3306/1/5851",
        "links": [
            "ade007f6.03d3f8",
            "386d124c.1324ae"
        ],
        "x": 255,
        "y": 1680,
        "wires": [
            [
                "f408cca6.5d2ec8"
            ]
        ]
    },
    {
        "id": "31b07cc.c0ecd84",
        "type": "comment",
        "z": "ae9ccaa4.46eba8",
        "name": "MQTT IN",
        "info": "",
        "x": 100,
        "y": 800,
        "wires": []
    },
    {
        "id": "609b77d3.b793f",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "3306-resourceId",
        "property": "parts[4]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5850",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5851",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 900,
        "wires": [
            [
                "a060422a.8f4fa8"
            ],
            [
                "5a76f698.e1035"
            ]
        ]
    },
    {
        "id": "46900a40.2c2c74",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "Method",
        "property": "parts[1]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 320,
        "y": 1060,
        "wires": [
            [
                "8577a78.0634ed8"
            ],
            [
                "d1d03ef1.8096"
            ],
            []
        ]
    },
    {
        "id": "8577a78.0634ed8",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "POST-objectId",
        "property": "parts[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3306",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3339",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 1000,
        "wires": [
            [
                "609b77d3.b793f"
            ],
            []
        ]
    },
    {
        "id": "a060422a.8f4fa8",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "5850-sensorId",
        "property": "parts[3]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 860,
        "wires": [
            [
                "9e6b9922.c91d9"
            ],
            [
                "d22cd4f2.12782"
            ]
        ]
    },
    {
        "id": "5a76f698.e1035",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "5851-sensorId",
        "property": "parts[3]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 940,
        "wires": [
            [
                "386d124c.1324ae"
            ],
            [
                "879951da.40ef7"
            ]
        ]
    },
    {
        "id": "d1d03ef1.8096",
        "type": "switch",
        "z": "ae9ccaa4.46eba8",
        "name": "GET-objectId",
        "property": "parts[2]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3306",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3339",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d22cd4f2.12782",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "audio-player-in/1/3306/2/5850",
        "links": [
            "bbbf666f.7d5818"
        ],
        "x": 995,
        "y": 880,
        "wires": []
    },
    {
        "id": "879951da.40ef7",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "audio-player-in/1/3306/2/5851",
        "links": [
            "f7f6c0e9.f4e2e"
        ],
        "x": 995,
        "y": 960,
        "wires": []
    },
    {
        "id": "386d124c.1324ae",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "audio-player-in/1/3306/1/5851",
        "links": [
            "fc4c2500.9728c"
        ],
        "x": 995,
        "y": 920,
        "wires": []
    },
    {
        "id": "9e6b9922.c91d9",
        "type": "link out",
        "z": "ae9ccaa4.46eba8",
        "name": "1/3306/1/5850->",
        "links": [
            "76587dda.844ecc"
        ],
        "x": 995,
        "y": 820,
        "wires": []
    },
    {
        "id": "bfa0c325.50f898",
        "type": "subflow:747afc9e.ba585c",
        "z": "ae9ccaa4.46eba8",
        "name": "",
        "env": [],
        "x": 120,
        "y": 1060,
        "wires": [
            [
                "46900a40.2c2c74"
            ]
        ]
    }
]