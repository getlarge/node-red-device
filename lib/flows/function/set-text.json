[
    {
        "id": "64085aee.e1fc64",
        "type": "function",
        "z": "79880fec.a09438",
        "name": "setText",
        "func": "try {\n    const debug = env.get(\"debug\");\n    if (!msg || msg === null || !msg.payload) throw new Error(\"No input to parse\");\n    const resourceId = env.get(\"resource_id\");\n    if (!resourceId) throw new Error(\"no resource id set\")\n    const value = msg.payload;\n    if (!value) throw new Error(\"no sensor value found\")\n    if (debug) {\n        console.log(`get-text for ${resourceId} :`, value)\n    }\n    if (typeof value === \"string\") {\n        msg.payload = value; \n    } else if (typeof value === \"number\") {\n        msg.payload = value.toString();\n    } else if (typeof value === \"boolean\") {\n        msg.payload = value.toString();\n    } else if (typeof value === \"object\" && value.type && value.data){\n        const bufferOriginal = Buffer.from(value.data);\n        msg.payload = bufferOriginal.toString('utf-8');\n        //  msg.payload = JSON.parse(msg.payload);\n    } else if (Buffer.isBuffer(value)){\n        msg.payload = value.toString('utf-8');\n    } else if (value instanceof Array) {\n        msg.payload = Buffer.from(value).toString('utf-8');\n    } else {\n        throw new Error(\"No value found\");\n    }\n    if (debug) {\n        console.log(`set-text for ${resourceId} : ${msg.payload}`)\n    }\n    return msg;\n} catch(error) {\n    return error;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 160,
        "wires": [
            []
        ]
    }
]
